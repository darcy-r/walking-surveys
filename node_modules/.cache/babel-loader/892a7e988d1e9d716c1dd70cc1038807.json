{"ast":null,"code":"import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\n\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  disable: 1,\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n  constructor() {\n    let explicit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let implicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let mainExtracted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    super();\n    this.explicit = explicit;\n    this.implicit = implicit;\n    this.mainExtracted = mainExtracted;\n  }\n\n  clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  hasAxisPart(part) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    } // Other parts are enabled by default, so they should not be false or null.\n\n\n    return !isFalseOrNull(this.get(part));\n  }\n\n  hasOrientSignalRef() {\n    return isSignalRef(this.explicit.orient);\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAIEA,4BAJF,QAMO,YANP;AAQA,SAAQC,SAAR,EAAyBC,IAAzB,QAAoC,YAApC;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,KAAR,QAAoB,UAApB;;AAEA,SAASC,aAAT,CAAuBC,CAAvB,EAA6B;EAC3B,OAAOA,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,IAA5B;AACD;;AASD,MAAMC,+BAA+B;EACnCC,OAAO,EAAE,CAD0B;EAEnCC,SAAS,EAAE,CAFwB;EAGnCC,KAAK,EAAE;AAH4B,GAIhCV,4BAJgC,GAIJ;EAC/BW,SAAS,EAAE,CADoB;EAE/BC,MAAM,EAAE;AAFuB,CAJI,CAArC;AASA,OAAO,MAAMC,yBAAyB,GAAGX,IAAI,CAACK,+BAAD,CAAtC;AAEP,OAAM,MAAOO,aAAP,SAA6BV,KAA7B,CAAsD;EAC1DW,cAG8B;IAAA,IAFZC,QAEY,uEAF4B,EAE5B;IAAA,IADZC,QACY,uEAD4B,EAC5B;IAAA,IAArBC,aAAqB,uEAAL,KAAK;IAE5B;IAJgB;IACA;IACT;EAGR;;EAEMC,KAAK;IACV,OAAO,IAAIL,aAAJ,CAAkBb,SAAS,CAAC,KAAKe,QAAN,CAA3B,EAA4Cf,SAAS,CAAC,KAAKgB,QAAN,CAArD,EAAsE,KAAKC,aAA3E,CAAP;EACD;;EAEME,WAAW,CAACC,IAAD,EAAe;IAC/B;IAEA,IAAIA,IAAI,KAAK,MAAb,EAAqB;MACnB;MACA,OAAO,IAAP;IACD;;IAED,IAAIA,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,OAAhC,EAAyC;MACvC,OAAO,CAAC,CAAC,KAAKC,GAAL,CAASD,IAAT,CAAT;IACD,CAV8B,CAW/B;;;IACA,OAAO,CAAChB,aAAa,CAAC,KAAKiB,GAAL,CAASD,IAAT,CAAD,CAArB;EACD;;EAEME,kBAAkB;IACvB,OAAOpB,WAAW,CAAC,KAAKa,QAAL,CAAcQ,MAAf,CAAlB;EACD;;AA9ByD","names":["COMMON_AXIS_PROPERTIES_INDEX","duplicate","keys","isSignalRef","Split","isFalseOrNull","v","AXIS_COMPONENT_PROPERTIES_INDEX","disable","gridScale","scale","labelExpr","encode","AXIS_COMPONENT_PROPERTIES","AxisComponent","constructor","explicit","implicit","mainExtracted","clone","hasAxisPart","part","get","hasOrientSignalRef","orient"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/axis/component.ts"],"sourcesContent":["import {Axis as VgAxis, SignalRef, Text} from 'vega';\nimport {\n  AxisInternal,\n  AxisPart,\n  AxisPropsWithCondition,\n  COMMON_AXIS_PROPERTIES_INDEX,\n  ConditionalAxisProp\n} from '../../axis';\nimport {FieldDefBase} from '../../channeldef';\nimport {duplicate, Flag, keys} from '../../util';\nimport {isSignalRef} from '../../vega.schema';\nimport {Split} from '../split';\n\nfunction isFalseOrNull(v: any) {\n  return v === false || v === null;\n}\n\nexport type AxisComponentProps = Omit<VgAxis, 'title' | ConditionalAxisProp> &\n  Omit<AxisPropsWithCondition<SignalRef>, 'title'> & {\n    title: Text | FieldDefBase<string>[] | SignalRef;\n    labelExpr: string;\n    disable: boolean;\n  };\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX: Flag<keyof AxisComponentProps> = {\n  disable: 1,\n  gridScale: 1,\n  scale: 1,\n  ...COMMON_AXIS_PROPERTIES_INDEX,\n  labelExpr: 1,\n  encode: 1\n};\n\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\n\nexport class AxisComponent extends Split<AxisComponentProps> {\n  constructor(\n    public readonly explicit: Partial<AxisComponentProps> = {},\n    public readonly implicit: Partial<AxisComponentProps> = {},\n    public mainExtracted = false\n  ) {\n    super();\n  }\n\n  public clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  public hasAxisPart(part: AxisPart) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    }\n    // Other parts are enabled by default, so they should not be false or null.\n    return !isFalseOrNull(this.get(part));\n  }\n\n  public hasOrientSignalRef() {\n    return isSignalRef(this.explicit.orient);\n  }\n}\n\nexport interface AxisComponentIndex {\n  x?: AxisComponent[];\n  y?: AxisComponent[];\n}\n\nexport interface AxisInternalIndex {\n  x?: AxisInternal;\n  y?: AxisInternal;\n}\n"]},"metadata":{},"sourceType":"module"}