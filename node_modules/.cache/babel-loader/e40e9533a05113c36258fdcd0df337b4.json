{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for density transform nodes\n */\n\nexport class DensityTransformNode extends DataFlowNode {\n  constructor(parent, transform) {\n    var _a, _b, _c;\n\n    super(parent);\n    this.transform = transform;\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n\n    const specifiedAs = (_a = this.transform.as) !== null && _a !== void 0 ? _a : [undefined, undefined];\n    this.transform.as = [(_b = specifiedAs[0]) !== null && _b !== void 0 ? _b : 'value', (_c = specifiedAs[1]) !== null && _c !== void 0 ? _c : 'density'];\n  }\n\n  clone() {\n    return new DensityTransformNode(null, duplicate(this.transform));\n  }\n\n  dependentFields() {\n    var _a;\n\n    return new Set([this.transform.density, ...((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : [])]);\n  }\n\n  producedFields() {\n    return new Set(this.transform.as);\n  }\n\n  hash() {\n    return `DensityTransform ${hash(this.transform)}`;\n  }\n\n  assemble() {\n    const _a = this.transform,\n          {\n      density\n    } = _a,\n          rest = __rest(_a, [\"density\"]);\n\n    const result = Object.assign({\n      type: 'kde',\n      field: density\n    }, rest);\n    return result;\n  }\n\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAEA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,YAA9B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA;;;;AAGA,OAAM,MAAOC,oBAAP,SAAoCD,YAApC,CAAgD;EAKpDE,YAAYC,MAAZ,EAA0CC,SAA1C,EAAqE;;;IACnE,MAAMD,MAAN;IADwC;IAExC,KAAKC,SAAL,GAAiBN,SAAS,CAACM,SAAD,CAA1B,CAFmE,CAE5B;;IACvC,MAAMC,WAAW,GAAG,WAAKD,SAAL,CAAeE,EAAf,MAAiB,IAAjB,IAAiBC,aAAjB,GAAiBA,EAAjB,GAAqB,CAACC,SAAD,EAAYA,SAAZ,CAAzC;IACA,KAAKJ,SAAL,CAAeE,EAAf,GAAoB,CAAC,iBAAW,CAAC,CAAD,CAAX,MAAc,IAAd,IAAcG,aAAd,GAAcA,EAAd,GAAkB,OAAnB,EAA4B,iBAAW,CAAC,CAAD,CAAX,MAAc,IAAd,IAAcC,aAAd,GAAcA,EAAd,GAAkB,SAA9C,CAApB;EACD;;EATMC,KAAK;IACV,OAAO,IAAIV,oBAAJ,CAAyB,IAAzB,EAA+BH,SAAS,CAAC,KAAKM,SAAN,CAAxC,CAAP;EACD;;EASMQ,eAAe;;;IACpB,OAAO,IAAIC,GAAJ,CAAQ,CAAC,KAAKT,SAAL,CAAeU,OAAhB,EAAyB,IAAI,WAAKV,SAAL,CAAeW,OAAf,MAAsB,IAAtB,IAAsBR,aAAtB,GAAsBA,EAAtB,GAA0B,EAA9B,CAAzB,CAAR,CAAP;EACD;;EAEMS,cAAc;IACnB,OAAO,IAAIH,GAAJ,CAAQ,KAAKT,SAAL,CAAeE,EAAvB,CAAP;EACD;;EAEMP,IAAI;IACT,OAAO,oBAAoBA,IAAI,CAAC,KAAKK,SAAN,CAAgB,EAA/C;EACD;;EAEMa,QAAQ;IACb,MAAMV,KAAqB,KAAKH,SAAhC;IAAA,MAAM;MAACU;IAAD,IAAQP,EAAd;IAAA,MAAmBW,IAAI,cAAjB,WAAiB,CAAvB;;IACA,MAAMC,MAAM;MACVC,IAAI,EAAE,KADI;MAEVC,KAAK,EAAEP;IAFG,GAGPI,IAHO,CAAZ;IAKA,OAAOC,MAAP;EACD;;AAhCmD","names":["duplicate","hash","DataFlowNode","DensityTransformNode","constructor","parent","transform","specifiedAs","as","_a","undefined","_b","_c","clone","dependentFields","Set","density","groupby","producedFields","assemble","rest","result","type","field"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/data/density.ts"],"sourcesContent":["import {KDETransform as VgKDETransform} from 'vega';\nimport {DensityTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode} from './dataflow';\n\n/**\n * A class for density transform nodes\n */\nexport class DensityTransformNode extends DataFlowNode {\n  public clone() {\n    return new DensityTransformNode(null, duplicate(this.transform));\n  }\n\n  constructor(parent: DataFlowNode, private transform: DensityTransform) {\n    super(parent);\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n    const specifiedAs = this.transform.as ?? [undefined, undefined];\n    this.transform.as = [specifiedAs[0] ?? 'value', specifiedAs[1] ?? 'density'];\n  }\n\n  public dependentFields() {\n    return new Set([this.transform.density, ...(this.transform.groupby ?? [])]);\n  }\n\n  public producedFields() {\n    return new Set(this.transform.as);\n  }\n\n  public hash() {\n    return `DensityTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgKDETransform {\n    const {density, ...rest} = this.transform;\n    const result: VgKDETransform = {\n      type: 'kde',\n      field: density,\n      ...rest\n    };\n    return result;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}