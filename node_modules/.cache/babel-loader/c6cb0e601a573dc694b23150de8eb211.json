{"ast":null,"code":"import { getMarkType } from '../mark';\nimport { isUnitSpec } from '../spec/unit';\nexport class CompositeMarkNormalizer {\n  constructor(name, run) {\n    this.name = name;\n    this.run = run;\n  }\n\n  hasMatchingType(spec) {\n    if (isUnitSpec(spec)) {\n      return getMarkType(spec.mark) === this.name;\n    }\n\n    return false;\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAAwBA,WAAxB,QAA0C,SAA1C;AAIA,SAAyBC,UAAzB,QAA8D,cAA9D;AAMA,OAAM,MAAOC,uBAAP,CAA8B;EAClCC,YACSC,IADT,EAESC,GAFT,EAW+C;IAVtC;IACA;EAUL;;EAEGC,eAAe,CAACC,IAAD,EAAsC;IAC1D,IAAIN,UAAU,CAACM,IAAD,CAAd,EAAsB;MACpB,OAAOP,WAAW,CAACO,IAAI,CAACC,IAAN,CAAX,KAA2B,KAAKJ,IAAvC;IACD;;IACD,OAAO,KAAP;EACD;;AApBiC","names":["getMarkType","isUnitSpec","CompositeMarkNormalizer","constructor","name","run","hasMatchingType","spec","mark"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compositemark/base.ts"],"sourcesContent":["import {Encoding} from '../encoding';\nimport {GenericMarkDef, getMarkType} from '../mark';\nimport {NonFacetUnitNormalizer, Normalize, NormalizerParams} from '../normalize/base';\nimport {GenericSpec} from '../spec';\nimport {GenericLayerSpec, NormalizedLayerSpec} from '../spec/layer';\nimport {GenericUnitSpec, isUnitSpec, NormalizedUnitSpec} from '../spec/unit';\nimport {FieldName} from '../channeldef';\n\n// TODO: replace string with Mark\nexport type CompositeMarkUnitSpec<M extends string> = GenericUnitSpec<any, M | GenericMarkDef<M>>;\n\nexport class CompositeMarkNormalizer<M extends string> implements NonFacetUnitNormalizer<CompositeMarkUnitSpec<M>> {\n  constructor(\n    public name: string,\n    public run: (\n      spec: CompositeMarkUnitSpec<M>,\n      params: NormalizerParams,\n      normalize: Normalize<\n        // Input of the normalize method\n        GenericUnitSpec<Encoding<FieldName>, M> | GenericLayerSpec<any>,\n        // Output of the normalize method\n        NormalizedLayerSpec | NormalizedUnitSpec\n      >\n    ) => NormalizedLayerSpec | NormalizedUnitSpec\n  ) {}\n\n  public hasMatchingType(spec: GenericSpec<any, any, any, any>): spec is CompositeMarkUnitSpec<M> {\n    if (isUnitSpec(spec)) {\n      return getMarkType(spec.mark) === this.name;\n    }\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}