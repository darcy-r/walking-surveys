{"ast":null,"code":"import { tickStep } from 'd3-array';\nimport { formatSpecifier, precisionFixed, precisionRound, precisionPrefix, format, formatPrefix, formatLocale } from 'd3-format';\nimport { SECONDS, MINUTES, HOURS, DATE, WEEK, MONTH, QUARTER, YEAR, MILLISECONDS, DAY, timeInterval, utcInterval } from 'vega-time';\nimport { isString, isObject, error, extend } from 'vega-util';\nimport { timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale as timeFormatLocale$1 } from 'd3-time-format';\n\nfunction memoize(method) {\n  const cache = {};\n  return spec => cache[spec] || (cache[spec] = method(spec));\n}\n\nfunction trimZeroes(numberFormat, decimalChar) {\n  return x => {\n    const str = numberFormat(x),\n          dec = str.indexOf(decimalChar);\n    if (dec < 0) return str;\n    let idx = rightmostDigit(str, dec);\n    const end = idx < str.length ? str.slice(idx) : '';\n\n    while (--idx > dec) if (str[idx] !== '0') {\n      ++idx;\n      break;\n    }\n\n    return str.slice(0, idx) + end;\n  };\n}\n\nfunction rightmostDigit(str, dec) {\n  let i = str.lastIndexOf('e'),\n      c;\n  if (i > 0) return i;\n\n  for (i = str.length; --i > dec;) {\n    c = str.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i + 1; // is digit\n  }\n}\n\nfunction numberLocale(locale) {\n  const format = memoize(locale.format),\n        formatPrefix = locale.formatPrefix;\n  return {\n    format,\n    formatPrefix,\n\n    formatFloat(spec) {\n      const s = formatSpecifier(spec || ',');\n\n      if (s.precision == null) {\n        s.precision = 12;\n\n        switch (s.type) {\n          case '%':\n            s.precision -= 2;\n            break;\n\n          case 'e':\n            s.precision -= 1;\n            break;\n        }\n\n        return trimZeroes(format(s), // number format\n        format('.1f')(1)[1] // decimal point character\n        );\n      } else {\n        return format(s);\n      }\n    },\n\n    formatSpan(start, stop, count, specifier) {\n      specifier = formatSpecifier(specifier == null ? ',f' : specifier);\n      const step = tickStep(start, stop, count),\n            value = Math.max(Math.abs(start), Math.abs(stop));\n      let precision;\n\n      if (specifier.precision == null) {\n        switch (specifier.type) {\n          case 's':\n            {\n              if (!isNaN(precision = precisionPrefix(step, value))) {\n                specifier.precision = precision;\n              }\n\n              return formatPrefix(specifier, value);\n            }\n\n          case '':\n          case 'e':\n          case 'g':\n          case 'p':\n          case 'r':\n            {\n              if (!isNaN(precision = precisionRound(step, value))) {\n                specifier.precision = precision - (specifier.type === 'e');\n              }\n\n              break;\n            }\n\n          case 'f':\n          case '%':\n            {\n              if (!isNaN(precision = precisionFixed(step))) {\n                specifier.precision = precision - (specifier.type === '%') * 2;\n              }\n\n              break;\n            }\n        }\n      }\n\n      return format(specifier);\n    }\n\n  };\n}\n\nlet defaultNumberLocale;\nresetNumberFormatDefaultLocale();\n\nfunction resetNumberFormatDefaultLocale() {\n  return defaultNumberLocale = numberLocale({\n    format: format,\n    formatPrefix: formatPrefix\n  });\n}\n\nfunction numberFormatLocale(definition) {\n  return numberLocale(formatLocale(definition));\n}\n\nfunction numberFormatDefaultLocale(definition) {\n  return arguments.length ? defaultNumberLocale = numberFormatLocale(definition) : defaultNumberLocale;\n}\n\nfunction timeMultiFormat(format, interval, spec) {\n  spec = spec || {};\n\n  if (!isObject(spec)) {\n    error(\"Invalid time multi-format specifier: \".concat(spec));\n  }\n\n  const second = interval(SECONDS),\n        minute = interval(MINUTES),\n        hour = interval(HOURS),\n        day = interval(DATE),\n        week = interval(WEEK),\n        month = interval(MONTH),\n        quarter = interval(QUARTER),\n        year = interval(YEAR),\n        L = format(spec[MILLISECONDS] || '.%L'),\n        S = format(spec[SECONDS] || ':%S'),\n        M = format(spec[MINUTES] || '%I:%M'),\n        H = format(spec[HOURS] || '%I %p'),\n        d = format(spec[DATE] || spec[DAY] || '%a %d'),\n        w = format(spec[WEEK] || '%b %d'),\n        m = format(spec[MONTH] || '%B'),\n        q = format(spec[QUARTER] || '%B'),\n        y = format(spec[YEAR] || '%Y');\n  return date => (second(date) < date ? L : minute(date) < date ? S : hour(date) < date ? M : day(date) < date ? H : month(date) < date ? week(date) < date ? d : w : year(date) < date ? quarter(date) < date ? m : q : y)(date);\n}\n\nfunction timeLocale(locale) {\n  const timeFormat = memoize(locale.format),\n        utcFormat = memoize(locale.utcFormat);\n  return {\n    timeFormat: spec => isString(spec) ? timeFormat(spec) : timeMultiFormat(timeFormat, timeInterval, spec),\n    utcFormat: spec => isString(spec) ? utcFormat(spec) : timeMultiFormat(utcFormat, utcInterval, spec),\n    timeParse: memoize(locale.parse),\n    utcParse: memoize(locale.utcParse)\n  };\n}\n\nlet defaultTimeLocale;\nresetTimeFormatDefaultLocale();\n\nfunction resetTimeFormatDefaultLocale() {\n  return defaultTimeLocale = timeLocale({\n    format: timeFormat,\n    parse: timeParse,\n    utcFormat: utcFormat,\n    utcParse: utcParse\n  });\n}\n\nfunction timeFormatLocale(definition) {\n  return timeLocale(timeFormatLocale$1(definition));\n}\n\nfunction timeFormatDefaultLocale(definition) {\n  return arguments.length ? defaultTimeLocale = timeFormatLocale(definition) : defaultTimeLocale;\n}\n\nconst createLocale = (number, time) => extend({}, number, time);\n\nfunction locale(numberSpec, timeSpec) {\n  const number = numberSpec ? numberFormatLocale(numberSpec) : numberFormatDefaultLocale();\n  const time = timeSpec ? timeFormatLocale(timeSpec) : timeFormatDefaultLocale();\n  return createLocale(number, time);\n}\n\nfunction defaultLocale(numberSpec, timeSpec) {\n  const args = arguments.length;\n\n  if (args && args !== 2) {\n    error('defaultLocale expects either zero or two arguments.');\n  }\n\n  return args ? createLocale(numberFormatDefaultLocale(numberSpec), timeFormatDefaultLocale(timeSpec)) : createLocale(numberFormatDefaultLocale(), timeFormatDefaultLocale());\n}\n\nfunction resetDefaultLocale() {\n  resetNumberFormatDefaultLocale();\n  resetTimeFormatDefaultLocale();\n  return defaultLocale();\n}\n\nexport { defaultLocale, locale, numberFormatDefaultLocale, numberFormatLocale, resetDefaultLocale, resetNumberFormatDefaultLocale, resetTimeFormatDefaultLocale, timeFormatDefaultLocale, timeFormatLocale };","map":{"version":3,"names":["tickStep","formatSpecifier","precisionFixed","precisionRound","precisionPrefix","format","formatPrefix","formatLocale","SECONDS","MINUTES","HOURS","DATE","WEEK","MONTH","QUARTER","YEAR","MILLISECONDS","DAY","timeInterval","utcInterval","isString","isObject","error","extend","timeFormat","timeParse","utcFormat","utcParse","timeFormatLocale","timeFormatLocale$1","memoize","method","cache","spec","trimZeroes","numberFormat","decimalChar","x","str","dec","indexOf","idx","rightmostDigit","end","length","slice","i","lastIndexOf","c","charCodeAt","numberLocale","locale","formatFloat","s","precision","type","formatSpan","start","stop","count","specifier","step","value","Math","max","abs","isNaN","defaultNumberLocale","resetNumberFormatDefaultLocale","numberFormatLocale","definition","numberFormatDefaultLocale","arguments","timeMultiFormat","interval","concat","second","minute","hour","day","week","month","quarter","year","L","S","M","H","d","w","m","q","y","date","timeLocale","parse","defaultTimeLocale","resetTimeFormatDefaultLocale","timeFormatDefaultLocale","createLocale","number","time","numberSpec","timeSpec","defaultLocale","args","resetDefaultLocale"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-format/build/vega-format.module.js"],"sourcesContent":["import { tickStep } from 'd3-array';\nimport { formatSpecifier, precisionFixed, precisionRound, precisionPrefix, format, formatPrefix, formatLocale } from 'd3-format';\nimport { SECONDS, MINUTES, HOURS, DATE, WEEK, MONTH, QUARTER, YEAR, MILLISECONDS, DAY, timeInterval, utcInterval } from 'vega-time';\nimport { isString, isObject, error, extend } from 'vega-util';\nimport { timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale as timeFormatLocale$1 } from 'd3-time-format';\n\nfunction memoize (method) {\n  const cache = {};\n  return spec => cache[spec] || (cache[spec] = method(spec));\n}\n\nfunction trimZeroes(numberFormat, decimalChar) {\n  return x => {\n    const str = numberFormat(x),\n          dec = str.indexOf(decimalChar);\n    if (dec < 0) return str;\n    let idx = rightmostDigit(str, dec);\n    const end = idx < str.length ? str.slice(idx) : '';\n\n    while (--idx > dec) if (str[idx] !== '0') {\n      ++idx;\n      break;\n    }\n\n    return str.slice(0, idx) + end;\n  };\n}\n\nfunction rightmostDigit(str, dec) {\n  let i = str.lastIndexOf('e'),\n      c;\n  if (i > 0) return i;\n\n  for (i = str.length; --i > dec;) {\n    c = str.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i + 1; // is digit\n  }\n}\n\nfunction numberLocale(locale) {\n  const format = memoize(locale.format),\n        formatPrefix = locale.formatPrefix;\n  return {\n    format,\n    formatPrefix,\n\n    formatFloat(spec) {\n      const s = formatSpecifier(spec || ',');\n\n      if (s.precision == null) {\n        s.precision = 12;\n\n        switch (s.type) {\n          case '%':\n            s.precision -= 2;\n            break;\n\n          case 'e':\n            s.precision -= 1;\n            break;\n        }\n\n        return trimZeroes(format(s), // number format\n        format('.1f')(1)[1] // decimal point character\n        );\n      } else {\n        return format(s);\n      }\n    },\n\n    formatSpan(start, stop, count, specifier) {\n      specifier = formatSpecifier(specifier == null ? ',f' : specifier);\n      const step = tickStep(start, stop, count),\n            value = Math.max(Math.abs(start), Math.abs(stop));\n      let precision;\n\n      if (specifier.precision == null) {\n        switch (specifier.type) {\n          case 's':\n            {\n              if (!isNaN(precision = precisionPrefix(step, value))) {\n                specifier.precision = precision;\n              }\n\n              return formatPrefix(specifier, value);\n            }\n\n          case '':\n          case 'e':\n          case 'g':\n          case 'p':\n          case 'r':\n            {\n              if (!isNaN(precision = precisionRound(step, value))) {\n                specifier.precision = precision - (specifier.type === 'e');\n              }\n\n              break;\n            }\n\n          case 'f':\n          case '%':\n            {\n              if (!isNaN(precision = precisionFixed(step))) {\n                specifier.precision = precision - (specifier.type === '%') * 2;\n              }\n\n              break;\n            }\n        }\n      }\n\n      return format(specifier);\n    }\n\n  };\n}\n\nlet defaultNumberLocale;\nresetNumberFormatDefaultLocale();\nfunction resetNumberFormatDefaultLocale() {\n  return defaultNumberLocale = numberLocale({\n    format: format,\n    formatPrefix: formatPrefix\n  });\n}\nfunction numberFormatLocale(definition) {\n  return numberLocale(formatLocale(definition));\n}\nfunction numberFormatDefaultLocale(definition) {\n  return arguments.length ? defaultNumberLocale = numberFormatLocale(definition) : defaultNumberLocale;\n}\n\nfunction timeMultiFormat(format, interval, spec) {\n  spec = spec || {};\n\n  if (!isObject(spec)) {\n    error(\"Invalid time multi-format specifier: \".concat(spec));\n  }\n\n  const second = interval(SECONDS),\n        minute = interval(MINUTES),\n        hour = interval(HOURS),\n        day = interval(DATE),\n        week = interval(WEEK),\n        month = interval(MONTH),\n        quarter = interval(QUARTER),\n        year = interval(YEAR),\n        L = format(spec[MILLISECONDS] || '.%L'),\n        S = format(spec[SECONDS] || ':%S'),\n        M = format(spec[MINUTES] || '%I:%M'),\n        H = format(spec[HOURS] || '%I %p'),\n        d = format(spec[DATE] || spec[DAY] || '%a %d'),\n        w = format(spec[WEEK] || '%b %d'),\n        m = format(spec[MONTH] || '%B'),\n        q = format(spec[QUARTER] || '%B'),\n        y = format(spec[YEAR] || '%Y');\n  return date => (second(date) < date ? L : minute(date) < date ? S : hour(date) < date ? M : day(date) < date ? H : month(date) < date ? week(date) < date ? d : w : year(date) < date ? quarter(date) < date ? m : q : y)(date);\n}\n\nfunction timeLocale(locale) {\n  const timeFormat = memoize(locale.format),\n        utcFormat = memoize(locale.utcFormat);\n  return {\n    timeFormat: spec => isString(spec) ? timeFormat(spec) : timeMultiFormat(timeFormat, timeInterval, spec),\n    utcFormat: spec => isString(spec) ? utcFormat(spec) : timeMultiFormat(utcFormat, utcInterval, spec),\n    timeParse: memoize(locale.parse),\n    utcParse: memoize(locale.utcParse)\n  };\n}\n\nlet defaultTimeLocale;\nresetTimeFormatDefaultLocale();\nfunction resetTimeFormatDefaultLocale() {\n  return defaultTimeLocale = timeLocale({\n    format: timeFormat,\n    parse: timeParse,\n    utcFormat: utcFormat,\n    utcParse: utcParse\n  });\n}\nfunction timeFormatLocale(definition) {\n  return timeLocale(timeFormatLocale$1(definition));\n}\nfunction timeFormatDefaultLocale(definition) {\n  return arguments.length ? defaultTimeLocale = timeFormatLocale(definition) : defaultTimeLocale;\n}\n\nconst createLocale = (number, time) => extend({}, number, time);\n\nfunction locale(numberSpec, timeSpec) {\n  const number = numberSpec ? numberFormatLocale(numberSpec) : numberFormatDefaultLocale();\n  const time = timeSpec ? timeFormatLocale(timeSpec) : timeFormatDefaultLocale();\n  return createLocale(number, time);\n}\nfunction defaultLocale(numberSpec, timeSpec) {\n  const args = arguments.length;\n\n  if (args && args !== 2) {\n    error('defaultLocale expects either zero or two arguments.');\n  }\n\n  return args ? createLocale(numberFormatDefaultLocale(numberSpec), timeFormatDefaultLocale(timeSpec)) : createLocale(numberFormatDefaultLocale(), timeFormatDefaultLocale());\n}\nfunction resetDefaultLocale() {\n  resetNumberFormatDefaultLocale();\n  resetTimeFormatDefaultLocale();\n  return defaultLocale();\n}\n\nexport { defaultLocale, locale, numberFormatDefaultLocale, numberFormatLocale, resetDefaultLocale, resetNumberFormatDefaultLocale, resetTimeFormatDefaultLocale, timeFormatDefaultLocale, timeFormatLocale };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}