{"ast":null,"code":"/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper {\n  constructor(exprGenerator) {\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  static fromName(rename, signalName) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n\n}","map":{"version":3,"mappings":"AAIA;;;;AAIA,OAAM,MAAOA,gBAAP,CAAuB;EAC3BC,YAAYC,aAAZ,EAAuC;IACrCC,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;MACpCC,UAAU,EAAE,IADwB;MAEpCC,GAAG,EAAEJ;IAF+B,CAAtC;EAID;;EAIqB,OAARK,QAAQ,CAACC,MAAD,EAAiBC,UAAjB,EAAmC;IACvD,OAAO,IAAIT,gBAAJ,CAAqB,MAAMQ,MAAM,CAACC,UAAD,CAAjC,CAAP;EACD;;AAZ0B","names":["SignalRefWrapper","constructor","exprGenerator","Object","defineProperty","enumerable","get","fromName","rename","signalName"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/signal.ts"],"sourcesContent":["import {SignalRef} from 'vega';\n\nexport type Rename = (oldSignalName: string) => string;\n\n/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper implements SignalRef {\n  constructor(exprGenerator: () => string) {\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  public signal: string; // for ts\n\n  public static fromName(rename: Rename, signalName: string) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}