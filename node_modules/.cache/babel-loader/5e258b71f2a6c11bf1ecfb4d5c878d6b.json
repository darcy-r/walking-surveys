{"ast":null,"code":"import { isFieldDef, vgField } from '../../channeldef';\nimport { GEOJSON } from '../../type';\nimport * as encode from './encode';\nexport const geoshape = {\n  vgMark: 'shape',\n  encodeEntry: model => {\n    return Object.assign({}, encode.baseEncodeEntry(model, {\n      align: 'ignore',\n      baseline: 'ignore',\n      color: 'include',\n      size: 'ignore',\n      orient: 'ignore',\n      theta: 'ignore'\n    }));\n  },\n  postEncodingTransform: model => {\n    const {\n      encoding\n    } = model;\n    const shapeDef = encoding.shape;\n    const transform = Object.assign({\n      type: 'geoshape',\n      projection: model.projectionName()\n    }, shapeDef && isFieldDef(shapeDef) && shapeDef.type === GEOJSON ? {\n      field: vgField(shapeDef, {\n        expr: 'datum'\n      })\n    } : {});\n    return [transform];\n  }\n};","map":{"version":3,"mappings":"AACA,SAAQA,UAAR,EAAoBC,OAApB,QAAkC,kBAAlC;AACA,SAAQC,OAAR,QAAsB,YAAtB;AAIA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAiB;EACpCC,MAAM,EAAE,OAD4B;EAEpCC,WAAW,EAAGC,KAAD,IAAqB;IAChC,yBACKJ,MAAM,CAACK,eAAP,CAAuBD,KAAvB,EAA8B;MAC/BE,KAAK,EAAE,QADwB;MAE/BC,QAAQ,EAAE,QAFqB;MAG/BC,KAAK,EAAE,SAHwB;MAI/BC,IAAI,EAAE,QAJyB;MAK/BC,MAAM,EAAE,QALuB;MAM/BC,KAAK,EAAE;IANwB,CAA9B,CADL;EAUD,CAbmC;EAcpCC,qBAAqB,EAAGR,KAAD,IAAgD;IACrE,MAAM;MAACS;IAAD,IAAaT,KAAnB;IACA,MAAMU,QAAQ,GAAGD,QAAQ,CAACE,KAA1B;IAEA,MAAMC,SAAS;MACbC,IAAI,EAAE,UADO;MAEbC,UAAU,EAAEd,KAAK,CAACe,cAAN;IAFC,GAITL,QAAQ,IAAIjB,UAAU,CAACiB,QAAD,CAAtB,IAAoCA,QAAQ,CAACG,IAAT,KAAkBlB,OAAtD,GACA;MAACqB,KAAK,EAAEtB,OAAO,CAACgB,QAAD,EAAW;QAACO,IAAI,EAAE;MAAP,CAAX;IAAf,CADA,GAEA,EANS,CAAf;IAQA,OAAO,CAACL,SAAD,CAAP;EACD;AA3BmC,CAA/B","names":["isFieldDef","vgField","GEOJSON","encode","geoshape","vgMark","encodeEntry","model","baseEncodeEntry","align","baseline","color","size","orient","theta","postEncodingTransform","encoding","shapeDef","shape","transform","type","projection","projectionName","field","expr"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/mark/geoshape.ts"],"sourcesContent":["import {GeoShapeTransform as VgGeoShapeTransform} from 'vega';\nimport {isFieldDef, vgField} from '../../channeldef';\nimport {GEOJSON} from '../../type';\nimport {VgPostEncodingTransform} from '../../vega.schema';\nimport {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as encode from './encode';\n\nexport const geoshape: MarkCompiler = {\n  vgMark: 'shape',\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        size: 'ignore',\n        orient: 'ignore',\n        theta: 'ignore'\n      })\n    };\n  },\n  postEncodingTransform: (model: UnitModel): VgPostEncodingTransform[] => {\n    const {encoding} = model;\n    const shapeDef = encoding.shape;\n\n    const transform: VgGeoShapeTransform = {\n      type: 'geoshape',\n      projection: model.projectionName(),\n      // as: 'shape',\n      ...(shapeDef && isFieldDef(shapeDef) && shapeDef.type === GEOJSON\n        ? {field: vgField(shapeDef, {expr: 'datum'})}\n        : {})\n    };\n    return [transform];\n  }\n};\n"]},"metadata":{},"sourceType":"module"}