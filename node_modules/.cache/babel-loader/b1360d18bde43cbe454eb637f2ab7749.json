{"ast":null,"code":"import { toNumber, peek, hasOwnProperty, toSet, array, constant, isNumber, span, isObject, isString, error, isArray } from 'vega-util';\nimport { bisectRight, range, bisect } from 'd3-array';\nimport * as $ from 'd3-scale';\nimport { scaleOrdinal, tickFormat as tickFormat$1 } from 'd3-scale';\nexport { scaleImplicit } from 'd3-scale';\nimport * as $$1 from 'd3-interpolate';\nimport { timeInterval, utcInterval } from 'vega-time';\n\nfunction bandSpace(count, paddingInner, paddingOuter) {\n  const space = count - paddingInner + paddingOuter * 2;\n  return count ? space > 0 ? space : 1 : 0;\n}\n\nconst Identity = 'identity';\nconst Linear = 'linear';\nconst Log = 'log';\nconst Pow = 'pow';\nconst Sqrt = 'sqrt';\nconst Symlog = 'symlog';\nconst Time = 'time';\nconst UTC = 'utc';\nconst Sequential = 'sequential';\nconst Diverging = 'diverging';\nconst Quantile = 'quantile';\nconst Quantize = 'quantize';\nconst Threshold = 'threshold';\nconst Ordinal = 'ordinal';\nconst Point = 'point';\nconst Band = 'band';\nconst BinOrdinal = 'bin-ordinal'; // categories\n\nconst Continuous = 'continuous';\nconst Discrete = 'discrete';\nconst Discretizing = 'discretizing';\nconst Interpolating = 'interpolating';\nconst Temporal = 'temporal';\n\nfunction invertRange(scale) {\n  return function (_) {\n    let lo = _[0],\n        hi = _[1],\n        t;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    return [scale.invert(lo), scale.invert(hi)];\n  };\n}\n\nfunction invertRangeExtent(scale) {\n  return function (_) {\n    const range = scale.range();\n    let lo = _[0],\n        hi = _[1],\n        min = -1,\n        max,\n        t,\n        i,\n        n;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    for (i = 0, n = range.length; i < n; ++i) {\n      if (range[i] >= lo && range[i] <= hi) {\n        if (min < 0) min = i;\n        max = i;\n      }\n    }\n\n    if (min < 0) return undefined;\n    lo = scale.invertExtent(range[min]);\n    hi = scale.invertExtent(range[max]);\n    return [lo[0] === undefined ? lo[1] : lo[0], hi[1] === undefined ? hi[0] : hi[1]];\n  };\n}\n\nfunction band() {\n  const scale = scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range;\n  let range$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    const n = domain().length,\n          reverse = range$1[1] < range$1[0],\n          stop = range$1[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n    let start = range$1[reverse - 0];\n    step = (stop - start) / (space || 1);\n\n    if (round) {\n      step = Math.floor(step);\n    }\n\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n\n    if (round) {\n      start = Math.round(start);\n      bandwidth = Math.round(bandwidth);\n    }\n\n    const values = range(n).map(i => start + step * i);\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain(_);\n      return rescale();\n    } else {\n      return domain();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range$1 = [+_[0], +_[1]];\n      return rescale();\n    } else {\n      return range$1.slice();\n    }\n  };\n\n  scale.rangeRound = function (_) {\n    range$1 = [+_[0], +_[1]];\n    round = true;\n    return rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    if (arguments.length) {\n      round = !!_;\n      return rescale();\n    } else {\n      return round;\n    }\n  };\n\n  scale.padding = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      paddingInner = paddingOuter;\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingInner = function (_) {\n    if (arguments.length) {\n      paddingInner = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingOuter = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingOuter;\n    }\n  };\n\n  scale.align = function (_) {\n    if (arguments.length) {\n      align = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return align;\n    }\n  };\n\n  scale.invertRange = function (_) {\n    // bail if range has null or undefined values\n    if (_[0] == null || _[1] == null) return;\n    const reverse = range$1[1] < range$1[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1;\n    let lo = +_[0],\n        hi = +_[1],\n        a,\n        b,\n        t; // bail if either range endpoint is invalid\n\n    if (lo !== lo || hi !== hi) return; // order range inputs, bail if outside of scale range\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    if (hi < values[0] || lo > range$1[1 - reverse]) return; // binary search to index into scale range\n\n    a = Math.max(0, bisectRight(values, lo) - 1);\n    b = lo === hi ? a : bisectRight(values, hi) - 1; // increment index a if lo is within padding gap\n\n    if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) {\n      // map + swap\n      t = a;\n      a = n - b;\n      b = n - t;\n    }\n\n    return a > b ? undefined : domain().slice(a, b + 1);\n  };\n\n  scale.invert = function (_) {\n    const value = scale.invertRange([_, _]);\n    return value ? value[0] : value;\n  };\n\n  scale.copy = function () {\n    return band().domain(domain()).range(range$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  const copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar map = Array.prototype.map;\n\nfunction numbers(_) {\n  return map.call(_, toNumber);\n}\n\nconst slice = Array.prototype.slice;\n\nfunction scaleBinOrdinal() {\n  let domain = [],\n      range = [];\n\n  function scale(x) {\n    return x == null || x !== x ? undefined : range[(bisect(domain, x) - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat$1(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n\n  scale.copy = function () {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n\n  return scale;\n}\n\nconst scales = {};\n/**\n * Augment scales with their type and needed inverse methods.\n */\n\nfunction create(type, constructor, metadata) {\n  const ctr = function scale() {\n    const s = constructor();\n\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? invertRange(s) : s.invertExtent ? invertRangeExtent(s) : undefined;\n    }\n\n    s.type = type;\n    return s;\n  };\n\n  ctr.metadata = toSet(array(metadata));\n  return ctr;\n}\n\nfunction scale(type, scale, metadata) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale, metadata);\n    return this;\n  } else {\n    return isValidScaleType(type) ? scales[type] : undefined;\n  }\n} // identity scale\n\n\nscale(Identity, $.scaleIdentity); // continuous scales\n\nscale(Linear, $.scaleLinear, Continuous);\nscale(Log, $.scaleLog, [Continuous, Log]);\nscale(Pow, $.scalePow, Continuous);\nscale(Sqrt, $.scaleSqrt, Continuous);\nscale(Symlog, $.scaleSymlog, Continuous);\nscale(Time, $.scaleTime, [Continuous, Temporal]);\nscale(UTC, $.scaleUtc, [Continuous, Temporal]); // sequential scales\n\nscale(Sequential, $.scaleSequential, [Continuous, Interpolating]); // backwards compat\n\nscale(\"\".concat(Sequential, \"-\").concat(Linear), $.scaleSequential, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Log), $.scaleSequentialLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Sequential, \"-\").concat(Pow), $.scaleSequentialPow, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Sqrt), $.scaleSequentialSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Symlog), $.scaleSequentialSymlog, [Continuous, Interpolating]); // diverging scales\n\nscale(\"\".concat(Diverging, \"-\").concat(Linear), $.scaleDiverging, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Log), $.scaleDivergingLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Diverging, \"-\").concat(Pow), $.scaleDivergingPow, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Sqrt), $.scaleDivergingSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Symlog), $.scaleDivergingSymlog, [Continuous, Interpolating]); // discretizing scales\n\nscale(Quantile, $.scaleQuantile, [Discretizing, Quantile]);\nscale(Quantize, $.scaleQuantize, Discretizing);\nscale(Threshold, $.scaleThreshold, Discretizing); // discrete scales\n\nscale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\nscale(Ordinal, $.scaleOrdinal, Discrete);\nscale(Band, band, Discrete);\nscale(Point, point, Discrete);\n\nfunction isValidScaleType(type) {\n  return hasOwnProperty(scales, type);\n}\n\nfunction hasType(key, type) {\n  const s = scales[key];\n  return s && s.metadata[type];\n}\n\nfunction isContinuous(key) {\n  return hasType(key, Continuous);\n}\n\nfunction isDiscrete(key) {\n  return hasType(key, Discrete);\n}\n\nfunction isDiscretizing(key) {\n  return hasType(key, Discretizing);\n}\n\nfunction isLogarithmic(key) {\n  return hasType(key, Log);\n}\n\nfunction isTemporal(key) {\n  return hasType(key, Temporal);\n}\n\nfunction isInterpolating(key) {\n  return hasType(key, Interpolating);\n}\n\nfunction isQuantile(key) {\n  return hasType(key, Quantile);\n}\n\nconst scaleProps = ['clamp', 'base', 'constant', 'exponent'];\n\nfunction interpolateRange(interpolator, range) {\n  const start = range[0],\n        span = peek(range) - start;\n  return function (i) {\n    return interpolator(start + i * span);\n  };\n}\n\nfunction interpolateColors(colors, type, gamma) {\n  return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n}\n\nfunction quantizeInterpolator(interpolator, count) {\n  const samples = new Array(count),\n        n = count + 1;\n\n  for (let i = 0; i < count;) samples[i] = interpolator(++i / n);\n\n  return samples;\n}\n\nfunction scaleCopy(scale) {\n  const t = scale.type,\n        s = scale.copy();\n  s.type = t;\n  return s;\n}\n\nfunction scaleFraction(scale$1, min, max) {\n  const delta = max - min;\n  let i, t, s;\n\n  if (!delta || !Number.isFinite(delta)) {\n    return constant(0.5);\n  } else {\n    i = (t = scale$1.type).indexOf('-');\n    t = i < 0 ? t : t.slice(i + 1);\n    s = scale(t)().domain([min, max]).range([0, 1]);\n    scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n    return s;\n  }\n}\n\nfunction interpolate(type, gamma) {\n  const interp = $$1[method(type)];\n  return gamma != null && interp && interp.gamma ? interp.gamma(gamma) : interp;\n}\n\nfunction method(type) {\n  return 'interpolate' + type.toLowerCase().split('-').map(s => s[0].toUpperCase() + s.slice(1)).join('');\n}\n\nconst continuous = {\n  blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n  greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n  greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n  oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n  purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n  reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n  blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n  bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n  greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n  orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n  purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n  purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n  purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n  redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n  yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n  yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n  yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n  blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n  brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n  purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n  purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n  redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n  redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n  yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n  redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n  redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n  pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n  spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n  viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n  magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n  inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n  plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n  cividis: '00205100235800265d002961012b65042e670831690d346b11366c16396d1c3c6e213f6e26426e2c456e31476e374a6e3c4d6e42506e47536d4c566d51586e555b6e5a5e6e5e616e62646f66676f6a6a706e6d717270717573727976737c79747f7c75827f758682768985778c8877908b78938e789691789a94789e9778a19b78a59e77a9a177aea575b2a874b6ab73bbaf71c0b26fc5b66dc9b96acebd68d3c065d8c462ddc85fe2cb5ce7cf58ebd355f0d652f3da4ff7de4cfae249fce647',\n  rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n  sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n  turbo: '23171b32204a3e2a71453493493eae4b49c54a53d7485ee44569ee4074f53c7ff8378af93295f72e9ff42ba9ef28b3e926bce125c5d925cdcf27d5c629dcbc2de3b232e9a738ee9d3ff39347f68950f9805afc7765fd6e70fe667cfd5e88fc5795fb51a1f84badf545b9f140c5ec3cd0e637dae034e4d931ecd12ef4c92bfac029ffb626ffad24ffa223ff9821ff8d1fff821dff771cfd6c1af76118f05616e84b14df4111d5380fcb2f0dc0260ab61f07ac1805a313029b0f00950c00910b00',\n  browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n  tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n  teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n  warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n  goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n  goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n  goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n  lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n  lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n  lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n  lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n  lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n  darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n  darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n  darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n  darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n  darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n};\nconst discrete = {\n  category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n  category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n  category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n  category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n  tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n  tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n  accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n  dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n  paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n  pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n  pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n  set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n  set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n  set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n};\n\nfunction colors(palette) {\n  const n = palette.length / 6 | 0,\n        c = new Array(n);\n\n  for (let i = 0; i < n;) {\n    c[i] = '#' + palette.slice(i * 6, ++i * 6);\n  }\n\n  return c;\n}\n\nfunction apply(_, f) {\n  for (const k in _) scheme(k, f(_[k]));\n}\n\nconst schemes = {};\napply(discrete, colors);\napply(continuous, _ => interpolateColors(colors(_)));\n\nfunction scheme(name, scheme) {\n  name = name && name.toLowerCase();\n\n  if (arguments.length > 1) {\n    schemes[name] = scheme;\n    return this;\n  } else {\n    return schemes[name];\n  }\n}\n\nconst SymbolLegend = 'symbol';\nconst DiscreteLegend = 'discrete';\nconst GradientLegend = 'gradient';\n\nconst defaultFormatter = value => isArray(value) ? value.map(v => String(v)) : String(value);\n\nconst ascending = (a, b) => a[1] - b[1];\n\nconst descending = (a, b) => b[1] - a[1];\n/**\n * Determine the tick count or interval function.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} count - The desired tick count or interval specifier.\n * @param {number} minStep - The desired minimum step between tick values.\n * @return {*} - The tick count or interval function.\n */\n\n\nfunction tickCount(scale, count, minStep) {\n  let step;\n\n  if (isNumber(count)) {\n    if (scale.bins) {\n      count = Math.max(count, scale.bins.length);\n    }\n\n    if (minStep != null) {\n      count = Math.min(count, Math.floor(span(scale.domain()) / minStep || 1));\n    }\n  }\n\n  if (isObject(count)) {\n    step = count.step;\n    count = count.interval;\n  }\n\n  if (isString(count)) {\n    count = scale.type === Time ? timeInterval(count) : scale.type == UTC ? utcInterval(count) : error('Only time and utc scales accept interval strings.');\n    if (step) count = count.every(step);\n  }\n\n  return count;\n}\n/**\n * Filter a set of candidate tick values, ensuring that only tick values\n * that lie within the scale range are included.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {Array<*>} ticks - The candidate tick values.\n * @param {*} count - The tick count or interval function.\n * @return {Array<*>} - The filtered tick values.\n */\n\n\nfunction validTicks(scale, ticks, count) {\n  let range = scale.range(),\n      lo = range[0],\n      hi = peek(range),\n      cmp = ascending;\n\n  if (lo > hi) {\n    range = hi;\n    hi = lo;\n    lo = range;\n    cmp = descending;\n  }\n\n  lo = Math.floor(lo);\n  hi = Math.ceil(hi); // filter ticks to valid values within the range\n  // additionally sort ticks in range order (#2579)\n\n  ticks = ticks.map(v => [v, scale(v)]).filter(_ => lo <= _[1] && _[1] <= hi).sort(cmp).map(_ => _[0]);\n\n  if (count > 0 && ticks.length > 1) {\n    const endpoints = [ticks[0], peek(ticks)];\n\n    while (ticks.length > count && ticks.length >= 3) {\n      ticks = ticks.filter((_, i) => !(i % 2));\n    }\n\n    if (ticks.length < 3) {\n      ticks = endpoints;\n    }\n  }\n\n  return ticks;\n}\n/**\n * Generate tick values for the given scale and approximate tick count or\n * interval value. If the scale has a 'ticks' method, it will be used to\n * generate the ticks, with the count argument passed as a parameter. If the\n * scale lacks a 'ticks' method, the full scale domain will be returned.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} [count] - The approximate number of desired ticks.\n * @return {Array<*>} - The generated tick values.\n */\n\n\nfunction tickValues(scale, count) {\n  return scale.bins ? validTicks(scale, scale.bins) : scale.ticks ? scale.ticks(count) : scale.domain();\n}\n/**\n * Generate a label format function for a scale. If the scale has a\n * 'tickFormat' method, it will be used to generate the formatter, with the\n * count and specifier arguments passed as parameters. If the scale lacks a\n * 'tickFormat' method, the returned formatter performs simple string coercion.\n * If the input scale is a logarithmic scale and the format specifier does not\n * indicate a desired decimal precision, a special variable precision formatter\n * that automatically trims trailing zeroes will be generated.\n * @param {Scale} scale - The scale for which to generate the label formatter.\n * @param {*} [count] - The approximate number of desired ticks.\n * @param {string} [specifier] - The format specifier. Must be a legal d3\n *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n *   time multi-format specifier object.\n * @return {function(*):string} - The generated label formatter.\n */\n\n\nfunction tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n  const type = scale.type;\n  let format = defaultFormatter;\n\n  if (type === Time || formatType === Time) {\n    format = locale.timeFormat(specifier);\n  } else if (type === UTC || formatType === UTC) {\n    format = locale.utcFormat(specifier);\n  } else if (isLogarithmic(type)) {\n    const varfmt = locale.formatFloat(specifier);\n\n    if (noSkip || scale.bins) {\n      format = varfmt;\n    } else {\n      const test = tickLog(scale, count, false);\n\n      format = _ => test(_) ? varfmt(_) : '';\n    }\n  } else if (scale.tickFormat) {\n    // if d3 scale has tickFormat, it must be continuous\n    const d = scale.domain();\n    format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n  } else if (specifier) {\n    format = locale.format(specifier);\n  }\n\n  return format;\n}\n\nfunction tickLog(scale, count, values) {\n  const ticks = tickValues(scale, count),\n        base = scale.base(),\n        logb = Math.log(base),\n        k = Math.max(1, base * count / ticks.length); // apply d3-scale's log format filter criteria\n\n  const test = d => {\n    let i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n    if (i * base < base - 0.5) i *= base;\n    return i <= k;\n  };\n\n  return values ? ticks.filter(test) : test;\n}\n\nconst symbols = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'thresholds',\n  [Threshold]: 'domain'\n};\nconst formats = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'domain'\n};\n\nfunction labelValues(scale, count) {\n  return scale.bins ? binValues(scale.bins) : scale.type === Log ? tickLog(scale, count, true) : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]()) : tickValues(scale, count);\n}\n\nfunction thresholdFormat(locale, scale, specifier) {\n  const _ = scale[formats[scale.type]](),\n        n = _.length;\n\n  let d = n > 1 ? _[1] - _[0] : _[0],\n      i;\n\n  for (i = 1; i < n; ++i) {\n    d = Math.min(d, _[i] - _[i - 1]);\n  } // tickCount = 3 ticks times 10 for increased resolution\n\n\n  return locale.formatSpan(0, d, 3 * 10, specifier);\n}\n\nfunction thresholdValues(thresholds) {\n  const values = [-Infinity].concat(thresholds);\n  values.max = +Infinity;\n  return values;\n}\n\nfunction binValues(bins) {\n  const values = bins.slice(0, -1);\n  values.max = peek(bins);\n  return values;\n}\n\nconst isDiscreteRange = scale => symbols[scale.type] || scale.bins;\n\nfunction labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n  const format = formats[scale.type] && formatType !== Time && formatType !== UTC ? thresholdFormat(locale, scale, specifier) : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n  return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format) : type === DiscreteLegend ? formatDiscrete(format) : formatPoint(format);\n}\n\nconst formatRange = format => (value, index, array) => {\n  const limit = get(array[index + 1], get(array.max, +Infinity)),\n        lo = formatValue(value, format),\n        hi = formatValue(limit, format);\n  return lo && hi ? lo + ' \\u2013 ' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n};\n\nconst get = (value, dflt) => value != null ? value : dflt;\n\nconst formatDiscrete = format => (value, index) => index ? format(value) : null;\n\nconst formatPoint = format => value => format(value);\n\nconst formatValue = (value, format) => Number.isFinite(value) ? format(value) : null;\n\nfunction labelFraction(scale) {\n  const domain = scale.domain(),\n        count = domain.length - 1;\n  let lo = +domain[0],\n      hi = +peek(domain),\n      span = hi - lo;\n\n  if (scale.type === Threshold) {\n    const adjust = count ? span / count : 0.1;\n    lo -= adjust;\n    hi += adjust;\n    span = hi - lo;\n  }\n\n  return value => (value - lo) / span;\n}\n\nfunction format(locale, scale, specifier, formatType) {\n  const type = formatType || scale.type; // replace abbreviated time specifiers to improve screen reader experience\n\n  if (isString(specifier) && isTemporal(type)) {\n    specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n  }\n\n  return !specifier && type === Time ? locale.timeFormat('%A, %d %B %Y, %X') : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC') : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n}\n\nfunction domainCaption(locale, scale, opt) {\n  opt = opt || {};\n  const max = Math.max(3, opt.maxlen || 7),\n        fmt = format(locale, scale, opt.format, opt.formatType); // if scale breaks domain into bins, describe boundaries\n\n  if (isDiscretizing(scale.type)) {\n    const v = labelValues(scale).slice(1).map(fmt),\n          n = v.length;\n    return \"\".concat(n, \" boundar\").concat(n === 1 ? 'y' : 'ies', \": \").concat(v.join(', '));\n  } // if scale domain is discrete, list values\n  else if (isDiscrete(scale.type)) {\n    const d = scale.domain(),\n          n = d.length,\n          v = n > max ? d.slice(0, max - 2).map(fmt).join(', ') + ', ending with ' + d.slice(-1).map(fmt) : d.map(fmt).join(', ');\n    return \"\".concat(n, \" value\").concat(n === 1 ? '' : 's', \": \").concat(v);\n  } // if scale domain is continuous, describe value range\n  else {\n    const d = scale.domain();\n    return \"values from \".concat(fmt(d[0]), \" to \").concat(fmt(peek(d)));\n  }\n}\n\nexport { Band, BinOrdinal, DiscreteLegend, Diverging, GradientLegend, Identity, Linear, Log, Ordinal, Point, Pow, Quantile, Quantize, Sequential, Sqrt, SymbolLegend, Symlog, Threshold, Time, UTC, bandSpace, domainCaption, interpolate, interpolateColors, interpolateRange, isContinuous, isDiscrete, isDiscretizing, isInterpolating, isLogarithmic, isQuantile, isTemporal, isValidScaleType, labelFormat, labelFraction, labelValues, quantizeInterpolator, scale, scaleCopy, scaleFraction, scheme, tickCount, tickFormat, tickValues, validTicks };","map":{"version":3,"names":["toNumber","peek","hasOwnProperty","toSet","array","constant","isNumber","span","isObject","isString","error","isArray","bisectRight","range","bisect","$","scaleOrdinal","tickFormat","tickFormat$1","scaleImplicit","$$1","timeInterval","utcInterval","bandSpace","count","paddingInner","paddingOuter","space","Identity","Linear","Log","Pow","Sqrt","Symlog","Time","UTC","Sequential","Diverging","Quantile","Quantize","Threshold","Ordinal","Point","Band","BinOrdinal","Continuous","Discrete","Discretizing","Interpolating","Temporal","invertRange","scale","_","lo","hi","t","invert","invertRangeExtent","min","max","i","n","length","undefined","invertExtent","band","unknown","domain","ordinalRange","range$1","step","bandwidth","round","align","rescale","reverse","stop","start","Math","floor","values","map","arguments","slice","rangeRound","padding","a","b","value","copy","pointish","point","Array","prototype","numbers","call","scaleBinOrdinal","x","specifier","scales","create","type","constructor","metadata","ctr","s","isValidScaleType","scaleIdentity","scaleLinear","scaleLog","scalePow","scaleSqrt","scaleSymlog","scaleTime","scaleUtc","scaleSequential","concat","scaleSequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","scaleDiverging","scaleDivergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","scaleQuantile","scaleQuantize","scaleThreshold","hasType","key","isContinuous","isDiscrete","isDiscretizing","isLogarithmic","isTemporal","isInterpolating","isQuantile","scaleProps","interpolateRange","interpolator","interpolateColors","colors","gamma","piecewise","interpolate","quantizeInterpolator","samples","scaleCopy","scaleFraction","scale$1","delta","Number","isFinite","indexOf","forEach","m","interp","method","toLowerCase","split","toUpperCase","join","continuous","blues","greens","greys","oranges","purples","reds","blueGreen","bluePurple","greenBlue","orangeRed","purpleBlue","purpleBlueGreen","purpleRed","redPurple","yellowGreen","yellowOrangeBrown","yellowOrangeRed","blueOrange","brownBlueGreen","purpleGreen","purpleOrange","redBlue","redGrey","yellowGreenBlue","redYellowBlue","redYellowGreen","pinkYellowGreen","spectral","viridis","magma","inferno","plasma","cividis","rainbow","sinebow","turbo","browns","tealBlues","teals","warmGreys","goldGreen","goldOrange","goldRed","lightGreyRed","lightGreyTeal","lightMulti","lightOrange","lightTealBlue","darkBlue","darkGold","darkGreen","darkMulti","darkRed","discrete","category10","category20","category20b","category20c","tableau10","tableau20","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","palette","c","apply","f","k","scheme","schemes","name","SymbolLegend","DiscreteLegend","GradientLegend","defaultFormatter","v","String","ascending","descending","tickCount","minStep","bins","interval","every","validTicks","ticks","cmp","ceil","filter","sort","endpoints","tickValues","locale","formatType","noSkip","format","timeFormat","utcFormat","varfmt","formatFloat","test","tickLog","d","formatSpan","base","logb","log","pow","symbols","formats","labelValues","binValues","thresholdValues","thresholdFormat","thresholds","Infinity","isDiscreteRange","labelFormat","formatRange","formatDiscrete","formatPoint","index","limit","get","formatValue","dflt","labelFraction","adjust","replace","domainCaption","opt","maxlen","fmt"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-scale/build/vega-scale.module.js"],"sourcesContent":["import { toNumber, peek, hasOwnProperty, toSet, array, constant, isNumber, span, isObject, isString, error, isArray } from 'vega-util';\nimport { bisectRight, range, bisect } from 'd3-array';\nimport * as $ from 'd3-scale';\nimport { scaleOrdinal, tickFormat as tickFormat$1 } from 'd3-scale';\nexport { scaleImplicit } from 'd3-scale';\nimport * as $$1 from 'd3-interpolate';\nimport { timeInterval, utcInterval } from 'vega-time';\n\nfunction bandSpace (count, paddingInner, paddingOuter) {\n  const space = count - paddingInner + paddingOuter * 2;\n  return count ? space > 0 ? space : 1 : 0;\n}\n\nconst Identity = 'identity';\nconst Linear = 'linear';\nconst Log = 'log';\nconst Pow = 'pow';\nconst Sqrt = 'sqrt';\nconst Symlog = 'symlog';\nconst Time = 'time';\nconst UTC = 'utc';\nconst Sequential = 'sequential';\nconst Diverging = 'diverging';\nconst Quantile = 'quantile';\nconst Quantize = 'quantize';\nconst Threshold = 'threshold';\nconst Ordinal = 'ordinal';\nconst Point = 'point';\nconst Band = 'band';\nconst BinOrdinal = 'bin-ordinal'; // categories\n\nconst Continuous = 'continuous';\nconst Discrete = 'discrete';\nconst Discretizing = 'discretizing';\nconst Interpolating = 'interpolating';\nconst Temporal = 'temporal';\n\nfunction invertRange (scale) {\n  return function (_) {\n    let lo = _[0],\n        hi = _[1],\n        t;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    return [scale.invert(lo), scale.invert(hi)];\n  };\n}\n\nfunction invertRangeExtent (scale) {\n  return function (_) {\n    const range = scale.range();\n    let lo = _[0],\n        hi = _[1],\n        min = -1,\n        max,\n        t,\n        i,\n        n;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    for (i = 0, n = range.length; i < n; ++i) {\n      if (range[i] >= lo && range[i] <= hi) {\n        if (min < 0) min = i;\n        max = i;\n      }\n    }\n\n    if (min < 0) return undefined;\n    lo = scale.invertExtent(range[min]);\n    hi = scale.invertExtent(range[max]);\n    return [lo[0] === undefined ? lo[1] : lo[0], hi[1] === undefined ? hi[0] : hi[1]];\n  };\n}\n\nfunction band() {\n  const scale = scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range;\n  let range$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    const n = domain().length,\n          reverse = range$1[1] < range$1[0],\n          stop = range$1[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n    let start = range$1[reverse - 0];\n    step = (stop - start) / (space || 1);\n\n    if (round) {\n      step = Math.floor(step);\n    }\n\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n\n    if (round) {\n      start = Math.round(start);\n      bandwidth = Math.round(bandwidth);\n    }\n\n    const values = range(n).map(i => start + step * i);\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain(_);\n      return rescale();\n    } else {\n      return domain();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range$1 = [+_[0], +_[1]];\n      return rescale();\n    } else {\n      return range$1.slice();\n    }\n  };\n\n  scale.rangeRound = function (_) {\n    range$1 = [+_[0], +_[1]];\n    round = true;\n    return rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    if (arguments.length) {\n      round = !!_;\n      return rescale();\n    } else {\n      return round;\n    }\n  };\n\n  scale.padding = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      paddingInner = paddingOuter;\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingInner = function (_) {\n    if (arguments.length) {\n      paddingInner = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingOuter = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingOuter;\n    }\n  };\n\n  scale.align = function (_) {\n    if (arguments.length) {\n      align = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return align;\n    }\n  };\n\n  scale.invertRange = function (_) {\n    // bail if range has null or undefined values\n    if (_[0] == null || _[1] == null) return;\n    const reverse = range$1[1] < range$1[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1;\n    let lo = +_[0],\n        hi = +_[1],\n        a,\n        b,\n        t; // bail if either range endpoint is invalid\n\n    if (lo !== lo || hi !== hi) return; // order range inputs, bail if outside of scale range\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    if (hi < values[0] || lo > range$1[1 - reverse]) return; // binary search to index into scale range\n\n    a = Math.max(0, bisectRight(values, lo) - 1);\n    b = lo === hi ? a : bisectRight(values, hi) - 1; // increment index a if lo is within padding gap\n\n    if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) {\n      // map + swap\n      t = a;\n      a = n - b;\n      b = n - t;\n    }\n\n    return a > b ? undefined : domain().slice(a, b + 1);\n  };\n\n  scale.invert = function (_) {\n    const value = scale.invertRange([_, _]);\n    return value ? value[0] : value;\n  };\n\n  scale.copy = function () {\n    return band().domain(domain()).range(range$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  const copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar map = Array.prototype.map;\nfunction numbers(_) {\n  return map.call(_, toNumber);\n}\n\nconst slice = Array.prototype.slice;\n\nfunction scaleBinOrdinal() {\n  let domain = [],\n      range = [];\n\n  function scale(x) {\n    return x == null || x !== x ? undefined : range[(bisect(domain, x) - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat$1(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n\n  scale.copy = function () {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n\n  return scale;\n}\n\nconst scales = {};\n/**\n * Augment scales with their type and needed inverse methods.\n */\n\nfunction create(type, constructor, metadata) {\n  const ctr = function scale() {\n    const s = constructor();\n\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? invertRange(s) : s.invertExtent ? invertRangeExtent(s) : undefined;\n    }\n\n    s.type = type;\n    return s;\n  };\n\n  ctr.metadata = toSet(array(metadata));\n  return ctr;\n}\n\nfunction scale(type, scale, metadata) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale, metadata);\n    return this;\n  } else {\n    return isValidScaleType(type) ? scales[type] : undefined;\n  }\n} // identity scale\n\nscale(Identity, $.scaleIdentity); // continuous scales\n\nscale(Linear, $.scaleLinear, Continuous);\nscale(Log, $.scaleLog, [Continuous, Log]);\nscale(Pow, $.scalePow, Continuous);\nscale(Sqrt, $.scaleSqrt, Continuous);\nscale(Symlog, $.scaleSymlog, Continuous);\nscale(Time, $.scaleTime, [Continuous, Temporal]);\nscale(UTC, $.scaleUtc, [Continuous, Temporal]); // sequential scales\n\nscale(Sequential, $.scaleSequential, [Continuous, Interpolating]); // backwards compat\n\nscale(\"\".concat(Sequential, \"-\").concat(Linear), $.scaleSequential, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Log), $.scaleSequentialLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Sequential, \"-\").concat(Pow), $.scaleSequentialPow, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Sqrt), $.scaleSequentialSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Symlog), $.scaleSequentialSymlog, [Continuous, Interpolating]); // diverging scales\n\nscale(\"\".concat(Diverging, \"-\").concat(Linear), $.scaleDiverging, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Log), $.scaleDivergingLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Diverging, \"-\").concat(Pow), $.scaleDivergingPow, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Sqrt), $.scaleDivergingSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Symlog), $.scaleDivergingSymlog, [Continuous, Interpolating]); // discretizing scales\n\nscale(Quantile, $.scaleQuantile, [Discretizing, Quantile]);\nscale(Quantize, $.scaleQuantize, Discretizing);\nscale(Threshold, $.scaleThreshold, Discretizing); // discrete scales\n\nscale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\nscale(Ordinal, $.scaleOrdinal, Discrete);\nscale(Band, band, Discrete);\nscale(Point, point, Discrete);\nfunction isValidScaleType(type) {\n  return hasOwnProperty(scales, type);\n}\n\nfunction hasType(key, type) {\n  const s = scales[key];\n  return s && s.metadata[type];\n}\n\nfunction isContinuous(key) {\n  return hasType(key, Continuous);\n}\nfunction isDiscrete(key) {\n  return hasType(key, Discrete);\n}\nfunction isDiscretizing(key) {\n  return hasType(key, Discretizing);\n}\nfunction isLogarithmic(key) {\n  return hasType(key, Log);\n}\nfunction isTemporal(key) {\n  return hasType(key, Temporal);\n}\nfunction isInterpolating(key) {\n  return hasType(key, Interpolating);\n}\nfunction isQuantile(key) {\n  return hasType(key, Quantile);\n}\n\nconst scaleProps = ['clamp', 'base', 'constant', 'exponent'];\nfunction interpolateRange(interpolator, range) {\n  const start = range[0],\n        span = peek(range) - start;\n  return function (i) {\n    return interpolator(start + i * span);\n  };\n}\nfunction interpolateColors(colors, type, gamma) {\n  return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n}\nfunction quantizeInterpolator(interpolator, count) {\n  const samples = new Array(count),\n        n = count + 1;\n\n  for (let i = 0; i < count;) samples[i] = interpolator(++i / n);\n\n  return samples;\n}\nfunction scaleCopy(scale) {\n  const t = scale.type,\n        s = scale.copy();\n  s.type = t;\n  return s;\n}\nfunction scaleFraction(scale$1, min, max) {\n  const delta = max - min;\n  let i, t, s;\n\n  if (!delta || !Number.isFinite(delta)) {\n    return constant(0.5);\n  } else {\n    i = (t = scale$1.type).indexOf('-');\n    t = i < 0 ? t : t.slice(i + 1);\n    s = scale(t)().domain([min, max]).range([0, 1]);\n    scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n    return s;\n  }\n}\nfunction interpolate(type, gamma) {\n  const interp = $$1[method(type)];\n  return gamma != null && interp && interp.gamma ? interp.gamma(gamma) : interp;\n}\n\nfunction method(type) {\n  return 'interpolate' + type.toLowerCase().split('-').map(s => s[0].toUpperCase() + s.slice(1)).join('');\n}\n\nconst continuous = {\n  blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n  greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n  greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n  oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n  purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n  reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n  blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n  bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n  greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n  orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n  purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n  purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n  purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n  redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n  yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n  yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n  yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n  blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n  brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n  purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n  purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n  redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n  redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n  yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n  redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n  redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n  pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n  spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n  viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n  magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n  inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n  plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n  cividis: '00205100235800265d002961012b65042e670831690d346b11366c16396d1c3c6e213f6e26426e2c456e31476e374a6e3c4d6e42506e47536d4c566d51586e555b6e5a5e6e5e616e62646f66676f6a6a706e6d717270717573727976737c79747f7c75827f758682768985778c8877908b78938e789691789a94789e9778a19b78a59e77a9a177aea575b2a874b6ab73bbaf71c0b26fc5b66dc9b96acebd68d3c065d8c462ddc85fe2cb5ce7cf58ebd355f0d652f3da4ff7de4cfae249fce647',\n  rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n  sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n  turbo: '23171b32204a3e2a71453493493eae4b49c54a53d7485ee44569ee4074f53c7ff8378af93295f72e9ff42ba9ef28b3e926bce125c5d925cdcf27d5c629dcbc2de3b232e9a738ee9d3ff39347f68950f9805afc7765fd6e70fe667cfd5e88fc5795fb51a1f84badf545b9f140c5ec3cd0e637dae034e4d931ecd12ef4c92bfac029ffb626ffad24ffa223ff9821ff8d1fff821dff771cfd6c1af76118f05616e84b14df4111d5380fcb2f0dc0260ab61f07ac1805a313029b0f00950c00910b00',\n  browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n  tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n  teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n  warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n  goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n  goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n  goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n  lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n  lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n  lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n  lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n  lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n  darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n  darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n  darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n  darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n  darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n};\nconst discrete = {\n  category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n  category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n  category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n  category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n  tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n  tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n  accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n  dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n  paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n  pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n  pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n  set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n  set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n  set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n};\n\nfunction colors(palette) {\n  const n = palette.length / 6 | 0,\n        c = new Array(n);\n\n  for (let i = 0; i < n;) {\n    c[i] = '#' + palette.slice(i * 6, ++i * 6);\n  }\n\n  return c;\n}\n\nfunction apply(_, f) {\n  for (const k in _) scheme(k, f(_[k]));\n}\n\nconst schemes = {};\napply(discrete, colors);\napply(continuous, _ => interpolateColors(colors(_)));\nfunction scheme(name, scheme) {\n  name = name && name.toLowerCase();\n\n  if (arguments.length > 1) {\n    schemes[name] = scheme;\n    return this;\n  } else {\n    return schemes[name];\n  }\n}\n\nconst SymbolLegend = 'symbol';\nconst DiscreteLegend = 'discrete';\nconst GradientLegend = 'gradient';\n\nconst defaultFormatter = value => isArray(value) ? value.map(v => String(v)) : String(value);\n\nconst ascending = (a, b) => a[1] - b[1];\n\nconst descending = (a, b) => b[1] - a[1];\n/**\n * Determine the tick count or interval function.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} count - The desired tick count or interval specifier.\n * @param {number} minStep - The desired minimum step between tick values.\n * @return {*} - The tick count or interval function.\n */\n\n\nfunction tickCount(scale, count, minStep) {\n  let step;\n\n  if (isNumber(count)) {\n    if (scale.bins) {\n      count = Math.max(count, scale.bins.length);\n    }\n\n    if (minStep != null) {\n      count = Math.min(count, Math.floor(span(scale.domain()) / minStep || 1));\n    }\n  }\n\n  if (isObject(count)) {\n    step = count.step;\n    count = count.interval;\n  }\n\n  if (isString(count)) {\n    count = scale.type === Time ? timeInterval(count) : scale.type == UTC ? utcInterval(count) : error('Only time and utc scales accept interval strings.');\n    if (step) count = count.every(step);\n  }\n\n  return count;\n}\n/**\n * Filter a set of candidate tick values, ensuring that only tick values\n * that lie within the scale range are included.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {Array<*>} ticks - The candidate tick values.\n * @param {*} count - The tick count or interval function.\n * @return {Array<*>} - The filtered tick values.\n */\n\nfunction validTicks(scale, ticks, count) {\n  let range = scale.range(),\n      lo = range[0],\n      hi = peek(range),\n      cmp = ascending;\n\n  if (lo > hi) {\n    range = hi;\n    hi = lo;\n    lo = range;\n    cmp = descending;\n  }\n\n  lo = Math.floor(lo);\n  hi = Math.ceil(hi); // filter ticks to valid values within the range\n  // additionally sort ticks in range order (#2579)\n\n  ticks = ticks.map(v => [v, scale(v)]).filter(_ => lo <= _[1] && _[1] <= hi).sort(cmp).map(_ => _[0]);\n\n  if (count > 0 && ticks.length > 1) {\n    const endpoints = [ticks[0], peek(ticks)];\n\n    while (ticks.length > count && ticks.length >= 3) {\n      ticks = ticks.filter((_, i) => !(i % 2));\n    }\n\n    if (ticks.length < 3) {\n      ticks = endpoints;\n    }\n  }\n\n  return ticks;\n}\n/**\n * Generate tick values for the given scale and approximate tick count or\n * interval value. If the scale has a 'ticks' method, it will be used to\n * generate the ticks, with the count argument passed as a parameter. If the\n * scale lacks a 'ticks' method, the full scale domain will be returned.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} [count] - The approximate number of desired ticks.\n * @return {Array<*>} - The generated tick values.\n */\n\nfunction tickValues(scale, count) {\n  return scale.bins ? validTicks(scale, scale.bins) : scale.ticks ? scale.ticks(count) : scale.domain();\n}\n/**\n * Generate a label format function for a scale. If the scale has a\n * 'tickFormat' method, it will be used to generate the formatter, with the\n * count and specifier arguments passed as parameters. If the scale lacks a\n * 'tickFormat' method, the returned formatter performs simple string coercion.\n * If the input scale is a logarithmic scale and the format specifier does not\n * indicate a desired decimal precision, a special variable precision formatter\n * that automatically trims trailing zeroes will be generated.\n * @param {Scale} scale - The scale for which to generate the label formatter.\n * @param {*} [count] - The approximate number of desired ticks.\n * @param {string} [specifier] - The format specifier. Must be a legal d3\n *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n *   time multi-format specifier object.\n * @return {function(*):string} - The generated label formatter.\n */\n\nfunction tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n  const type = scale.type;\n  let format = defaultFormatter;\n\n  if (type === Time || formatType === Time) {\n    format = locale.timeFormat(specifier);\n  } else if (type === UTC || formatType === UTC) {\n    format = locale.utcFormat(specifier);\n  } else if (isLogarithmic(type)) {\n    const varfmt = locale.formatFloat(specifier);\n\n    if (noSkip || scale.bins) {\n      format = varfmt;\n    } else {\n      const test = tickLog(scale, count, false);\n\n      format = _ => test(_) ? varfmt(_) : '';\n    }\n  } else if (scale.tickFormat) {\n    // if d3 scale has tickFormat, it must be continuous\n    const d = scale.domain();\n    format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n  } else if (specifier) {\n    format = locale.format(specifier);\n  }\n\n  return format;\n}\nfunction tickLog(scale, count, values) {\n  const ticks = tickValues(scale, count),\n        base = scale.base(),\n        logb = Math.log(base),\n        k = Math.max(1, base * count / ticks.length); // apply d3-scale's log format filter criteria\n\n  const test = d => {\n    let i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n    if (i * base < base - 0.5) i *= base;\n    return i <= k;\n  };\n\n  return values ? ticks.filter(test) : test;\n}\n\nconst symbols = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'thresholds',\n  [Threshold]: 'domain'\n};\nconst formats = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'domain'\n};\nfunction labelValues(scale, count) {\n  return scale.bins ? binValues(scale.bins) : scale.type === Log ? tickLog(scale, count, true) : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]()) : tickValues(scale, count);\n}\nfunction thresholdFormat(locale, scale, specifier) {\n  const _ = scale[formats[scale.type]](),\n        n = _.length;\n\n  let d = n > 1 ? _[1] - _[0] : _[0],\n      i;\n\n  for (i = 1; i < n; ++i) {\n    d = Math.min(d, _[i] - _[i - 1]);\n  } // tickCount = 3 ticks times 10 for increased resolution\n\n\n  return locale.formatSpan(0, d, 3 * 10, specifier);\n}\n\nfunction thresholdValues(thresholds) {\n  const values = [-Infinity].concat(thresholds);\n  values.max = +Infinity;\n  return values;\n}\n\nfunction binValues(bins) {\n  const values = bins.slice(0, -1);\n  values.max = peek(bins);\n  return values;\n}\n\nconst isDiscreteRange = scale => symbols[scale.type] || scale.bins;\n\nfunction labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n  const format = formats[scale.type] && formatType !== Time && formatType !== UTC ? thresholdFormat(locale, scale, specifier) : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n  return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format) : type === DiscreteLegend ? formatDiscrete(format) : formatPoint(format);\n}\n\nconst formatRange = format => (value, index, array) => {\n  const limit = get(array[index + 1], get(array.max, +Infinity)),\n        lo = formatValue(value, format),\n        hi = formatValue(limit, format);\n  return lo && hi ? lo + ' \\u2013 ' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n};\n\nconst get = (value, dflt) => value != null ? value : dflt;\n\nconst formatDiscrete = format => (value, index) => index ? format(value) : null;\n\nconst formatPoint = format => value => format(value);\n\nconst formatValue = (value, format) => Number.isFinite(value) ? format(value) : null;\n\nfunction labelFraction(scale) {\n  const domain = scale.domain(),\n        count = domain.length - 1;\n  let lo = +domain[0],\n      hi = +peek(domain),\n      span = hi - lo;\n\n  if (scale.type === Threshold) {\n    const adjust = count ? span / count : 0.1;\n    lo -= adjust;\n    hi += adjust;\n    span = hi - lo;\n  }\n\n  return value => (value - lo) / span;\n}\n\nfunction format(locale, scale, specifier, formatType) {\n  const type = formatType || scale.type; // replace abbreviated time specifiers to improve screen reader experience\n\n  if (isString(specifier) && isTemporal(type)) {\n    specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n  }\n\n  return !specifier && type === Time ? locale.timeFormat('%A, %d %B %Y, %X') : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC') : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n}\n\nfunction domainCaption(locale, scale, opt) {\n  opt = opt || {};\n  const max = Math.max(3, opt.maxlen || 7),\n        fmt = format(locale, scale, opt.format, opt.formatType); // if scale breaks domain into bins, describe boundaries\n\n  if (isDiscretizing(scale.type)) {\n    const v = labelValues(scale).slice(1).map(fmt),\n          n = v.length;\n    return \"\".concat(n, \" boundar\").concat(n === 1 ? 'y' : 'ies', \": \").concat(v.join(', '));\n  } // if scale domain is discrete, list values\n  else if (isDiscrete(scale.type)) {\n    const d = scale.domain(),\n          n = d.length,\n          v = n > max ? d.slice(0, max - 2).map(fmt).join(', ') + ', ending with ' + d.slice(-1).map(fmt) : d.map(fmt).join(', ');\n    return \"\".concat(n, \" value\").concat(n === 1 ? '' : 's', \": \").concat(v);\n  } // if scale domain is continuous, describe value range\n  else {\n    const d = scale.domain();\n    return \"values from \".concat(fmt(d[0]), \" to \").concat(fmt(peek(d)));\n  }\n}\n\nexport { Band, BinOrdinal, DiscreteLegend, Diverging, GradientLegend, Identity, Linear, Log, Ordinal, Point, Pow, Quantile, Quantize, Sequential, Sqrt, SymbolLegend, Symlog, Threshold, Time, UTC, bandSpace, domainCaption, interpolate, interpolateColors, interpolateRange, isContinuous, isDiscrete, isDiscretizing, isInterpolating, isLogarithmic, isQuantile, isTemporal, isValidScaleType, labelFormat, labelFraction, labelValues, quantizeInterpolator, scale, scaleCopy, scaleFraction, scheme, tickCount, tickFormat, tickValues, validTicks };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}