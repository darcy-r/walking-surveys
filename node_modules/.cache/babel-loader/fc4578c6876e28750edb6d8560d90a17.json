{"ast":null,"code":"import { TUPLE, unitName } from '.';\nexport const TOGGLE = '_toggle';\nconst toggle = {\n  defined: selCmpt => {\n    return selCmpt.type === 'point' && !!selCmpt.toggle;\n  },\n  signals: (model, selCmpt, signals) => {\n    return signals.concat({\n      name: selCmpt.name + TOGGLE,\n      value: false,\n      on: [{\n        events: selCmpt.events,\n        update: selCmpt.toggle\n      }]\n    });\n  },\n  modifyExpr: (model, selCmpt) => {\n    const tpl = selCmpt.name + TUPLE;\n    const signal = selCmpt.name + TOGGLE;\n    return `${signal} ? null : ${tpl}, ` + (selCmpt.resolve === 'global' ? `${signal} ? null : true, ` : `${signal} ? null : {unit: ${unitName(model)}}, `) + `${signal} ? ${tpl} : null`;\n  }\n};\nexport default toggle;","map":{"version":3,"mappings":"AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,GAA9B;AAGA,OAAO,MAAMC,MAAM,GAAG,SAAf;AAEP,MAAMC,MAAM,GAA+B;EACzCC,OAAO,EAAEC,OAAO,IAAG;IACjB,OAAOA,OAAO,CAACC,IAAR,KAAiB,OAAjB,IAA4B,CAAC,CAACD,OAAO,CAACF,MAA7C;EACD,CAHwC;EAKzCI,OAAO,EAAE,CAACC,KAAD,EAAQH,OAAR,EAAiBE,OAAjB,KAA4B;IACnC,OAAOA,OAAO,CAACE,MAAR,CAAe;MACpBC,IAAI,EAAEL,OAAO,CAACK,IAAR,GAAeR,MADD;MAEpBS,KAAK,EAAE,KAFa;MAGpBC,EAAE,EAAE,CAAC;QAACC,MAAM,EAAER,OAAO,CAACQ,MAAjB;QAAyBC,MAAM,EAAET,OAAO,CAACF;MAAzC,CAAD;IAHgB,CAAf,CAAP;EAKD,CAXwC;EAazCY,UAAU,EAAE,CAACP,KAAD,EAAQH,OAAR,KAAmB;IAC7B,MAAMW,GAAG,GAAGX,OAAO,CAACK,IAAR,GAAeV,KAA3B;IACA,MAAMiB,MAAM,GAAGZ,OAAO,CAACK,IAAR,GAAeR,MAA9B;IAEA,OACE,GAAGe,MAAM,aAAaD,GAAG,IAAzB,IACCX,OAAO,CAACa,OAAR,KAAoB,QAApB,GAA+B,GAAGD,MAAM,kBAAxC,GAA6D,GAAGA,MAAM,oBAAoBhB,QAAQ,CAACO,KAAD,CAAO,KAD1G,IAEA,GAAGS,MAAM,MAAMD,GAAG,SAHpB;EAKD;AAtBwC,CAA3C;AAyBA,eAAeb,MAAf","names":["TUPLE","unitName","TOGGLE","toggle","defined","selCmpt","type","signals","model","concat","name","value","on","events","update","modifyExpr","tpl","signal","resolve"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/selection/toggle.ts"],"sourcesContent":["import {TUPLE, unitName} from '.';\nimport {SelectionCompiler} from '.';\n\nexport const TOGGLE = '_toggle';\n\nconst toggle: SelectionCompiler<'point'> = {\n  defined: selCmpt => {\n    return selCmpt.type === 'point' && !!selCmpt.toggle;\n  },\n\n  signals: (model, selCmpt, signals) => {\n    return signals.concat({\n      name: selCmpt.name + TOGGLE,\n      value: false,\n      on: [{events: selCmpt.events, update: selCmpt.toggle}]\n    });\n  },\n\n  modifyExpr: (model, selCmpt) => {\n    const tpl = selCmpt.name + TUPLE;\n    const signal = selCmpt.name + TOGGLE;\n\n    return (\n      `${signal} ? null : ${tpl}, ` +\n      (selCmpt.resolve === 'global' ? `${signal} ? null : true, ` : `${signal} ? null : {unit: ${unitName(model)}}, `) +\n      `${signal} ? ${tpl} : null`\n    );\n  }\n};\n\nexport default toggle;\n"]},"metadata":{},"sourceType":"module"}