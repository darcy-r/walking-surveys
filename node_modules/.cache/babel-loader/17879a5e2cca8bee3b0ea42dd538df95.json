{"ast":null,"code":"import { parseExpression } from 'vega-expression';\n\nfunction getName(node) {\n  const name = [];\n\n  if (node.type === 'Identifier') {\n    return [node.name];\n  }\n\n  if (node.type === 'Literal') {\n    return [node.value];\n  }\n\n  if (node.type === 'MemberExpression') {\n    name.push(...getName(node.object));\n    name.push(...getName(node.property));\n  }\n\n  return name;\n}\n\nfunction startsWithDatum(node) {\n  if (node.object.type === 'MemberExpression') {\n    return startsWithDatum(node.object);\n  }\n\n  return node.object.name === 'datum';\n}\n\nexport function getDependentFields(expression) {\n  const ast = parseExpression(expression);\n  const dependents = new Set(); // visit is missing in types https://github.com/vega/vega/issues/3298\n\n  ast.visit(node => {\n    if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n      dependents.add(getName(node).slice(1).join('.'));\n    }\n  });\n  return dependents;\n}","map":{"version":3,"mappings":"AAAA,SAAQA,eAAR,QAA8B,iBAA9B;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAA0B;EACxB,MAAMC,IAAI,GAAa,EAAvB;;EAEA,IAAID,IAAI,CAACE,IAAL,KAAc,YAAlB,EAAgC;IAC9B,OAAO,CAACF,IAAI,CAACC,IAAN,CAAP;EACD;;EAED,IAAID,IAAI,CAACE,IAAL,KAAc,SAAlB,EAA6B;IAC3B,OAAO,CAACF,IAAI,CAACG,KAAN,CAAP;EACD;;EAED,IAAIH,IAAI,CAACE,IAAL,KAAc,kBAAlB,EAAsC;IACpCD,IAAI,CAACG,IAAL,CAAU,GAAGL,OAAO,CAACC,IAAI,CAACK,MAAN,CAApB;IACAJ,IAAI,CAACG,IAAL,CAAU,GAAGL,OAAO,CAACC,IAAI,CAACM,QAAN,CAApB;EACD;;EAED,OAAOL,IAAP;AACD;;AAED,SAASM,eAAT,CAAyBP,IAAzB,EAAkC;EAChC,IAAIA,IAAI,CAACK,MAAL,CAAYH,IAAZ,KAAqB,kBAAzB,EAA6C;IAC3C,OAAOK,eAAe,CAACP,IAAI,CAACK,MAAN,CAAtB;EACD;;EACD,OAAOL,IAAI,CAACK,MAAL,CAAYJ,IAAZ,KAAqB,OAA5B;AACD;;AAED,OAAM,SAAUO,kBAAV,CAA6BC,UAA7B,EAA+C;EACnD,MAAMC,GAAG,GAAGZ,eAAe,CAACW,UAAD,CAA3B;EACA,MAAME,UAAU,GAAG,IAAIC,GAAJ,EAAnB,CAFmD,CAGnD;;EACCF,GAAW,CAACG,KAAZ,CAAmBb,IAAD,IAAc;IAC/B,IAAIA,IAAI,CAACE,IAAL,KAAc,kBAAd,IAAoCK,eAAe,CAACP,IAAD,CAAvD,EAA+D;MAC7DW,UAAU,CAACG,GAAX,CAAef,OAAO,CAACC,IAAD,CAAP,CAAce,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4B,GAA5B,CAAf;IACD;EACF,CAJA;EAMD,OAAOL,UAAP;AACD","names":["parseExpression","getName","node","name","type","value","push","object","property","startsWithDatum","getDependentFields","expression","ast","dependents","Set","visit","add","slice","join"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/data/expressions.ts"],"sourcesContent":["import {parseExpression} from 'vega-expression';\n\nfunction getName(node: any) {\n  const name: string[] = [];\n\n  if (node.type === 'Identifier') {\n    return [node.name];\n  }\n\n  if (node.type === 'Literal') {\n    return [node.value];\n  }\n\n  if (node.type === 'MemberExpression') {\n    name.push(...getName(node.object));\n    name.push(...getName(node.property));\n  }\n\n  return name;\n}\n\nfunction startsWithDatum(node: any): boolean {\n  if (node.object.type === 'MemberExpression') {\n    return startsWithDatum(node.object);\n  }\n  return node.object.name === 'datum';\n}\n\nexport function getDependentFields(expression: string) {\n  const ast = parseExpression(expression);\n  const dependents = new Set<string>();\n  // visit is missing in types https://github.com/vega/vega/issues/3298\n  (ast as any).visit((node: any) => {\n    if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n      dependents.add(getName(node).slice(1).join('.'));\n    }\n  });\n\n  return dependents;\n}\n"]},"metadata":{},"sourceType":"module"}