{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/cathracha is ti\\u0301reolai\\u0301ocht/public life observations/plo-viz-app/src/Plot.js\";\nimport React from 'react';\nimport { letterFrequency } from '@visx/mock-data';\nimport { Group } from '@visx/group';\nimport { Bar } from '@visx/shape';\nimport { scaleLinear, scaleBand } from '@visx/scale'; // We'll use some mock data from `@visx/mock-data` for this.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = letterFrequency; // Define the graph dimensions and margins\n\nconst width = 500;\nconst height = 500;\nconst margin = {\n  top: 20,\n  bottom: 20,\n  left: 20,\n  right: 20\n}; // Then we'll create some bounds\n\nconst xMax = width - margin.left - margin.right;\nconst yMax = height - margin.top - margin.bottom; // We'll make some helpers to get at the data we want\n\nconst x = d => d.letter;\n\nconst y = d => +d.frequency * 100; // And then scale the graph by our data\n\n\nconst xScale = scaleBand({\n  range: [0, xMax],\n  round: true,\n  domain: data.map(x),\n  padding: 0.4\n});\nconst yScale = scaleLinear({\n  range: [yMax, 0],\n  round: true,\n  domain: [0, Math.max(...data.map(y))]\n}); // Compose together the scale and accessor functions to get point functions\n\nconst compose = (scale, accessor) => data => scale(accessor(data));\n\nconst xPoint = compose(xScale, x);\nconst yPoint = compose(yScale, y); // Finally we'll embed it all in an SVG\n\nfunction BarGraph(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: data.map((d, i) => {\n      const barHeight = yMax - yPoint(d);\n      return /*#__PURE__*/_jsxDEV(Group, {\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          x: xPoint(d),\n          y: yMax - barHeight,\n          height: barHeight,\n          width: xScale.bandwidth(),\n          fill: \"#fc2e1c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, `bar-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BarGraph;\nexport default ScatterPlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarGraph\");","map":{"version":3,"names":["React","letterFrequency","Group","Bar","scaleLinear","scaleBand","data","width","height","margin","top","bottom","left","right","xMax","yMax","x","d","letter","y","frequency","xScale","range","round","domain","map","padding","yScale","Math","max","compose","scale","accessor","xPoint","yPoint","BarGraph","props","i","barHeight","bandwidth","ScatterPlot"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/src/Plot.js"],"sourcesContent":["import React from 'react';\nimport { letterFrequency } from '@visx/mock-data';\nimport { Group } from '@visx/group';\nimport { Bar } from '@visx/shape';\nimport { scaleLinear, scaleBand } from '@visx/scale';\n\n// We'll use some mock data from `@visx/mock-data` for this.\nconst data = letterFrequency;\n\n// Define the graph dimensions and margins\nconst width = 500;\nconst height = 500;\nconst margin = { top: 20, bottom: 20, left: 20, right: 20 };\n\n// Then we'll create some bounds\nconst xMax = width - margin.left - margin.right;\nconst yMax = height - margin.top - margin.bottom;\n\n// We'll make some helpers to get at the data we want\nconst x = d => d.letter;\nconst y = d => +d.frequency * 100;\n\n// And then scale the graph by our data\nconst xScale = scaleBand({\n  range: [0, xMax],\n  round: true,\n  domain: data.map(x),\n  padding: 0.4,\n});\nconst yScale = scaleLinear({\n  range: [yMax, 0],\n  round: true,\n  domain: [0, Math.max(...data.map(y))],\n});\n\n// Compose together the scale and accessor functions to get point functions\nconst compose = (scale, accessor) => data => scale(accessor(data));\nconst xPoint = compose(xScale, x);\nconst yPoint = compose(yScale, y);\n\n// Finally we'll embed it all in an SVG\nfunction BarGraph(props) {\n  return (\n    <svg width={width} height={height}>\n      {data.map((d, i) => {\n        const barHeight = yMax - yPoint(d);\n        return (\n          <Group key={`bar-${i}`}>\n            <Bar\n              x={xPoint(d)}\n              y={yMax - barHeight}\n              height={barHeight}\n              width={xScale.bandwidth()}\n              fill=\"#fc2e1c\"\n            />\n          </Group>\n        );\n      })}\n    </svg>\n  );\n}\n\nexport default ScatterPlot;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,aAAvC,C,CAEA;;;AACA,MAAMC,IAAI,GAAGL,eAAb,C,CAEA;;AACA,MAAMM,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,MAAM,GAAG;EAAEC,GAAG,EAAE,EAAP;EAAWC,MAAM,EAAE,EAAnB;EAAuBC,IAAI,EAAE,EAA7B;EAAiCC,KAAK,EAAE;AAAxC,CAAf,C,CAEA;;AACA,MAAMC,IAAI,GAAGP,KAAK,GAAGE,MAAM,CAACG,IAAf,GAAsBH,MAAM,CAACI,KAA1C;AACA,MAAME,IAAI,GAAGP,MAAM,GAAGC,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACE,MAA1C,C,CAEA;;AACA,MAAMK,CAAC,GAAGC,CAAC,IAAIA,CAAC,CAACC,MAAjB;;AACA,MAAMC,CAAC,GAAGF,CAAC,IAAI,CAACA,CAAC,CAACG,SAAH,GAAe,GAA9B,C,CAEA;;;AACA,MAAMC,MAAM,GAAGhB,SAAS,CAAC;EACvBiB,KAAK,EAAE,CAAC,CAAD,EAAIR,IAAJ,CADgB;EAEvBS,KAAK,EAAE,IAFgB;EAGvBC,MAAM,EAAElB,IAAI,CAACmB,GAAL,CAAST,CAAT,CAHe;EAIvBU,OAAO,EAAE;AAJc,CAAD,CAAxB;AAMA,MAAMC,MAAM,GAAGvB,WAAW,CAAC;EACzBkB,KAAK,EAAE,CAACP,IAAD,EAAO,CAAP,CADkB;EAEzBQ,KAAK,EAAE,IAFkB;EAGzBC,MAAM,EAAE,CAAC,CAAD,EAAII,IAAI,CAACC,GAAL,CAAS,GAAGvB,IAAI,CAACmB,GAAL,CAASN,CAAT,CAAZ,CAAJ;AAHiB,CAAD,CAA1B,C,CAMA;;AACA,MAAMW,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB1B,IAAI,IAAIyB,KAAK,CAACC,QAAQ,CAAC1B,IAAD,CAAT,CAAlD;;AACA,MAAM2B,MAAM,GAAGH,OAAO,CAACT,MAAD,EAASL,CAAT,CAAtB;AACA,MAAMkB,MAAM,GAAGJ,OAAO,CAACH,MAAD,EAASR,CAAT,CAAtB,C,CAEA;;AACA,SAASgB,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,oBACE;IAAK,KAAK,EAAE7B,KAAZ;IAAmB,MAAM,EAAEC,MAA3B;IAAA,UACGF,IAAI,CAACmB,GAAL,CAAS,CAACR,CAAD,EAAIoB,CAAJ,KAAU;MAClB,MAAMC,SAAS,GAAGvB,IAAI,GAAGmB,MAAM,CAACjB,CAAD,CAA/B;MACA,oBACE,QAAC,KAAD;QAAA,uBACE,QAAC,GAAD;UACE,CAAC,EAAEgB,MAAM,CAAChB,CAAD,CADX;UAEE,CAAC,EAAEF,IAAI,GAAGuB,SAFZ;UAGE,MAAM,EAAEA,SAHV;UAIE,KAAK,EAAEjB,MAAM,CAACkB,SAAP,EAJT;UAKE,IAAI,EAAC;QALP;UAAA;UAAA;UAAA;QAAA;MADF,GAAa,OAAMF,CAAE,EAArB;QAAA;QAAA;QAAA;MAAA,QADF;IAWD,CAbA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;KAnBQF,Q;AAqBT,eAAeK,WAAf"},"metadata":{},"sourceType":"module"}