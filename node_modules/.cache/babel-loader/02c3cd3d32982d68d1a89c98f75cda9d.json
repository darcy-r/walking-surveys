{"ast":null,"code":"var _jsxFileName = \"/Users/darcyroche/Documents/cathracha is ti\\u0301reolai\\u0301ocht/public life observations/plo-viz-app/src/App.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, useMap, CircleMarker, Popup } from 'react-leaflet';\nimport ScatterPlot from './Plot.js';\nimport streetGeometries from './street_locations.json';\nimport streetAttributes from './street_attributes.json';\nimport chartData from './chart_data.json';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sorted = (l, ascending) => {\n  let c = [...l];\n  c.sort();\n\n  if (!ascending) {\n    c.reverse();\n  }\n\n  return c;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSite: 1,\n      hoveredNode: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(ID) {\n    this.setState({\n      selectedSite: ID\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SiteLocationsMap, {\n        circleOnClick: ID => this.handleChange(ID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualisation-pane\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"visualisation-pane-content\",\n          children: [/*#__PURE__*/_jsxDEV(ScatterPlot, {\n            data: chartData[this.state.selectedSite]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Stree section ID: \", this.state.selectedSite]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: [streetAttributes[this.state.selectedSite]['street_name'], \" between \", streetAttributes[this.state.selectedSite]['cross_street_a'], \" and \", streetAttributes[this.state.selectedSite]['cross_street_b'], \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Between \", Math.min(...chartData[this.state.selectedSite].map(d => d.pph)), \" and \", Math.max(...chartData[this.state.selectedSite].map(d => d.pph)), \" people per hour have been surveyed walking through this street section. Surveys have been undertaken across \", new Set(chartData[this.state.selectedSite].map(d => d.date)).size, \" unique dates, including \", new Set(chartData[this.state.selectedSite].map(d => d.day_of_week)).size, \" days of the week, between the hours of \", sorted(chartData[this.state.selectedSite].map(d => d.time), true)[0].substring(0, 2), \":00 and \", parseInt(sorted(chartData[this.state.selectedSite].map(d => d.time), false)[0].substring(0, 2)) + 1, \":00.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"The entire dataset, including disaggregations by footpath and direction, is available to download \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://public-life-observations.s3.ap-southeast-2.amazonaws.com/parquet/movements.parquet\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 24\n            }, this), \" as open data under a \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://creativecommons.org/licenses/by/4.0/legalcode\",\n              children: \"Creative Commons Attribution 4.0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), \" licence.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction SiteLocationsMap(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      id: \"map-pane\",\n      center: [-33.87319087719761, 151.20681949733816],\n      zoom: 13,\n      zoomControl: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OSM</a> contributors, <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\",\n        url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), streetGeometries.map(d => {\n        return /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [d.latitude, d.longitude],\n          radius: 6,\n          fillColor: \"#ff7800\",\n          fillOpacity: 0.8,\n          weight: 0,\n          eventHandlers: {\n            click: () => props.circleOnClick(d.street_section_id)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Site ID: \", d.street_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, d.street_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n} // function SiteSelector(props) {\n//   const options = Object.keys(chartData).map((k) => {\n//     return (\n//       <option key={k} value={k}>{k}</option>\n//     )\n//   });\n//   return (\n//     <form>\n//       <label>\n//         Select your site:\n//         <select value={props.value} onChange={(e) => props.onChange(e.target.value)}>\n//           {options}\n//         </select>\n//       </label>\n//     </form>\n//   );\n// }\n\n\n_c = SiteLocationsMap;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"SiteLocationsMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","useMap","CircleMarker","Popup","ScatterPlot","streetGeometries","streetAttributes","chartData","sorted","l","ascending","c","sort","reverse","App","Component","constructor","props","state","selectedSite","hoveredNode","handleChange","bind","ID","setState","render","Math","min","map","d","pph","max","Set","date","size","day_of_week","time","substring","parseInt","SiteLocationsMap","latitude","longitude","click","circleOnClick","street_section_id","street_id"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, useMap, CircleMarker, Popup } from 'react-leaflet'\nimport ScatterPlot from './Plot.js';\nimport streetGeometries from './street_locations.json';\nimport streetAttributes from './street_attributes.json';\nimport chartData from './chart_data.json';\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\n\nconst sorted = (l, ascending) => {\n  let c = [...l];\n  c.sort();\n  if (!ascending) {\n    c.reverse()\n  }\n  return c;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSite: 1,\n      hoveredNode: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(ID) {\n    this.setState({selectedSite: ID});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SiteLocationsMap circleOnClick={(ID) => this.handleChange(ID)} />\n        <div id=\"visualisation-pane\">\n          <div id=\"visualisation-pane-content\">\n            {/* <SiteSelector value={this.state.selectedSite} onChange={(ID) => this.handleChange(ID)}/> */}\n            <ScatterPlot data={chartData[this.state.selectedSite]} />\n            <p>Stree section ID: {this.state.selectedSite}</p>\n            <p><i>{streetAttributes[this.state.selectedSite]['street_name']} between {streetAttributes[this.state.selectedSite]['cross_street_a']} and {streetAttributes[this.state.selectedSite]['cross_street_b']}.</i></p>\n            <p>\n              Between {Math.min(...chartData[this.state.selectedSite].map((d) => d.pph))} and {Math.max(...chartData[this.state.selectedSite].map((d) => d.pph))} people\n              per hour have been surveyed walking through this street section. Surveys have been undertaken\n              across {(new Set(chartData[this.state.selectedSite].map((d) => d.date))).size} unique\n              dates,\n              including {(new Set(chartData[this.state.selectedSite].map((d) => d.day_of_week))).size} days of the week, between the hours\n              of {sorted(chartData[this.state.selectedSite].map((d) => d.time), true)[0].substring(0, 2)}:00\n              and {parseInt(sorted(chartData[this.state.selectedSite].map((d) => d.time), false)[0].substring(0, 2)) + 1}:00.\n            </p>\n            <p>\n              The entire dataset, including disaggregations by footpath and direction, is available to\n              download <a href=\"https://public-life-observations.s3.ap-southeast-2.amazonaws.com/parquet/movements.parquet\">here</a> as\n              open data under\n              a <a href=\"https://creativecommons.org/licenses/by/4.0/legalcode\">Creative Commons Attribution 4.0</a> licence.\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction SiteLocationsMap(props) {\n  return (\n    <div>\n      <MapContainer id=\"map-pane\" center={[-33.87319087719761, 151.20681949733816]} zoom={13} zoomControl={false}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OSM</a> contributors, <a href=\"https://carto.com/attributions\">CARTO</a>'\n        url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\n      />\n      {\n        streetGeometries.map((d) => {\n          return (\n            <CircleMarker\n              center={[d.latitude, d.longitude]}\n              radius={6} fillColor=\"#ff7800\" fillOpacity={0.8} weight={0}\n              eventHandlers={{\n                click: () => props.circleOnClick(d.street_section_id),\n              }}\n              key={d.street_id}>\n              <Popup>Site ID: {d.street_id}</Popup>\n            </CircleMarker>\n          )\n        })\n      }\n      </MapContainer>\n    </div>\n  );\n}\n\n// function SiteSelector(props) {\n//   const options = Object.keys(chartData).map((k) => {\n//     return (\n//       <option key={k} value={k}>{k}</option>\n//     )\n//   });\n//   return (\n//     <form>\n//       <label>\n//         Select your site:\n//         <select value={props.value} onChange={(e) => props.onChange(e.target.value)}>\n//           {options}\n//         </select>\n//       </label>\n//     </form>\n//   );\n// }\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}