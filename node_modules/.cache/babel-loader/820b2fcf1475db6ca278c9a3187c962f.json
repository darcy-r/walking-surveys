{"ast":null,"code":"import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the sample transform nodes\n */\n\nexport class SampleTransformNode extends DataFlowNode {\n  constructor(parent, transform) {\n    super(parent);\n    this.transform = transform;\n  }\n\n  clone() {\n    return new SampleTransformNode(null, duplicate(this.transform));\n  }\n\n  dependentFields() {\n    return new Set();\n  }\n\n  producedFields() {\n    return new Set();\n  }\n\n  hash() {\n    return `SampleTransform ${hash(this.transform)}`;\n  }\n\n  assemble() {\n    return {\n      type: 'sample',\n      size: this.transform.sample\n    };\n  }\n\n}","map":{"version":3,"mappings":"AAEA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,YAA9B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA;;;;AAGA,OAAM,MAAOC,mBAAP,SAAmCD,YAAnC,CAA+C;EAKnDE,YAAYC,MAAZ,EAA0CC,SAA1C,EAAoE;IAClE,MAAMD,MAAN;IADwC;EAEzC;;EANME,KAAK;IACV,OAAO,IAAIJ,mBAAJ,CAAwB,IAAxB,EAA8BH,SAAS,CAAC,KAAKM,SAAN,CAAvC,CAAP;EACD;;EAMME,eAAe;IACpB,OAAO,IAAIC,GAAJ,EAAP;EACD;;EAEMC,cAAc;IACnB,OAAO,IAAID,GAAJ,EAAP;EACD;;EAEMR,IAAI;IACT,OAAO,mBAAmBA,IAAI,CAAC,KAAKK,SAAN,CAAgB,EAA9C;EACD;;EAEMK,QAAQ;IACb,OAAO;MACLC,IAAI,EAAE,QADD;MAELC,IAAI,EAAE,KAAKP,SAAL,CAAeQ;IAFhB,CAAP;EAID;;AA1BkD","names":["duplicate","hash","DataFlowNode","SampleTransformNode","constructor","parent","transform","clone","dependentFields","Set","producedFields","assemble","type","size","sample"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/data/sample.ts"],"sourcesContent":["import {SampleTransform as VgSampleTransform} from 'vega';\nimport {SampleTransform} from '../../transform';\nimport {duplicate, hash} from '../../util';\nimport {DataFlowNode} from './dataflow';\n\n/**\n * A class for the sample transform nodes\n */\nexport class SampleTransformNode extends DataFlowNode {\n  public clone() {\n    return new SampleTransformNode(null, duplicate(this.transform));\n  }\n\n  constructor(parent: DataFlowNode, private transform: SampleTransform) {\n    super(parent);\n  }\n\n  public dependentFields() {\n    return new Set<string>();\n  }\n\n  public producedFields() {\n    return new Set<string>();\n  }\n\n  public hash() {\n    return `SampleTransform ${hash(this.transform)}`;\n  }\n\n  public assemble(): VgSampleTransform {\n    return {\n      type: 'sample',\n      size: this.transform.sample\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}