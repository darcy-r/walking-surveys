{"ast":null,"code":"import domain from './domain';\nimport range from './range';\nimport align from './align';\nimport base from './base';\nimport clamp from './clamp';\nimport constant from './constant';\nimport exponent from './exponent';\nimport interpolate from './interpolate';\nimport nice from './nice';\nimport padding from './padding';\nimport reverse from './reverse';\nimport round from './round';\nimport unknown from './unknown';\nimport zero from './zero';\n/**\n * List of all operators, in order of execution\n */\n\nexport var ALL_OPERATORS = [// domain => nice => zero\n'domain', 'nice', 'zero', // interpolate before round\n'interpolate', 'round', // set range then reverse\n'range', 'reverse', // Order does not matter for these operators\n'align', 'base', 'clamp', 'constant', 'exponent', 'padding', 'unknown']; // Use Record to enforce that all keys in OperatorType must exist.\n\nvar operators = {\n  domain: domain,\n  nice: nice,\n  zero: zero,\n  interpolate: interpolate,\n  round: round,\n  align: align,\n  base: base,\n  clamp: clamp,\n  constant: constant,\n  exponent: exponent,\n  padding: padding,\n  range: range,\n  reverse: reverse,\n  unknown: unknown\n};\nexport default function scaleOperator() {\n  for (var _len = arguments.length, ops = new Array(_len), _key = 0; _key < _len; _key++) {\n    ops[_key] = arguments[_key];\n  }\n\n  var selection = new Set(ops);\n  var selectedOps = ALL_OPERATORS.filter(function (o) {\n    return selection.has(o);\n  });\n  return function applyOperators(scale, config) {\n    if (typeof config !== 'undefined') {\n      selectedOps.forEach(function (op) {\n        operators[op](scale, config);\n      });\n    }\n\n    return scale;\n  };\n}","map":{"version":3,"names":["domain","range","align","base","clamp","constant","exponent","interpolate","nice","padding","reverse","round","unknown","zero","ALL_OPERATORS","operators","scaleOperator","_len","arguments","length","ops","Array","_key","selection","Set","selectedOps","filter","o","has","applyOperators","scale","config","forEach","op"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/@visx/scale/esm/operators/scaleOperator.js"],"sourcesContent":["import domain from './domain';\nimport range from './range';\nimport align from './align';\nimport base from './base';\nimport clamp from './clamp';\nimport constant from './constant';\nimport exponent from './exponent';\nimport interpolate from './interpolate';\nimport nice from './nice';\nimport padding from './padding';\nimport reverse from './reverse';\nimport round from './round';\nimport unknown from './unknown';\nimport zero from './zero';\n/**\n * List of all operators, in order of execution\n */\n\nexport var ALL_OPERATORS = [// domain => nice => zero\n'domain', 'nice', 'zero', // interpolate before round\n'interpolate', 'round', // set range then reverse\n'range', 'reverse', // Order does not matter for these operators\n'align', 'base', 'clamp', 'constant', 'exponent', 'padding', 'unknown'];\n// Use Record to enforce that all keys in OperatorType must exist.\nvar operators = {\n  domain: domain,\n  nice: nice,\n  zero: zero,\n  interpolate: interpolate,\n  round: round,\n  align: align,\n  base: base,\n  clamp: clamp,\n  constant: constant,\n  exponent: exponent,\n  padding: padding,\n  range: range,\n  reverse: reverse,\n  unknown: unknown\n};\nexport default function scaleOperator() {\n  for (var _len = arguments.length, ops = new Array(_len), _key = 0; _key < _len; _key++) {\n    ops[_key] = arguments[_key];\n  }\n\n  var selection = new Set(ops);\n  var selectedOps = ALL_OPERATORS.filter(function (o) {\n    return selection.has(o);\n  });\n  return function applyOperators(scale, config) {\n    if (typeof config !== 'undefined') {\n      selectedOps.forEach(function (op) {\n        operators[op](scale, config);\n      });\n    }\n\n    return scale;\n  };\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,aAAa,GAAG,CAAC;AAC5B,QAD2B,EACjB,MADiB,EACT,MADS,EACD;AAC1B,aAF2B,EAEZ,OAFY,EAEH;AACxB,OAH2B,EAGlB,SAHkB,EAGP;AACpB,OAJ2B,EAIlB,MAJkB,EAIV,OAJU,EAID,UAJC,EAIW,UAJX,EAIuB,SAJvB,EAIkC,SAJlC,CAApB,C,CAKP;;AACA,IAAIC,SAAS,GAAG;EACdf,MAAM,EAAEA,MADM;EAEdQ,IAAI,EAAEA,IAFQ;EAGdK,IAAI,EAAEA,IAHQ;EAIdN,WAAW,EAAEA,WAJC;EAKdI,KAAK,EAAEA,KALO;EAMdT,KAAK,EAAEA,KANO;EAOdC,IAAI,EAAEA,IAPQ;EAQdC,KAAK,EAAEA,KARO;EASdC,QAAQ,EAAEA,QATI;EAUdC,QAAQ,EAAEA,QAVI;EAWdG,OAAO,EAAEA,OAXK;EAYdR,KAAK,EAAEA,KAZO;EAadS,OAAO,EAAEA,OAbK;EAcdE,OAAO,EAAEA;AAdK,CAAhB;AAgBA,eAAe,SAASI,aAAT,GAAyB;EACtC,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,GAAG,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAAnC,EAAoDK,IAAI,GAAG,CAAhE,EAAmEA,IAAI,GAAGL,IAA1E,EAAgFK,IAAI,EAApF,EAAwF;IACtFF,GAAG,CAACE,IAAD,CAAH,GAAYJ,SAAS,CAACI,IAAD,CAArB;EACD;;EAED,IAAIC,SAAS,GAAG,IAAIC,GAAJ,CAAQJ,GAAR,CAAhB;EACA,IAAIK,WAAW,GAAGX,aAAa,CAACY,MAAd,CAAqB,UAAUC,CAAV,EAAa;IAClD,OAAOJ,SAAS,CAACK,GAAV,CAAcD,CAAd,CAAP;EACD,CAFiB,CAAlB;EAGA,OAAO,SAASE,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;IAC5C,IAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC;MACjCN,WAAW,CAACO,OAAZ,CAAoB,UAAUC,EAAV,EAAc;QAChClB,SAAS,CAACkB,EAAD,CAAT,CAAcH,KAAd,EAAqBC,MAArB;MACD,CAFD;IAGD;;IAED,OAAOD,KAAP;EACD,CARD;AASD"},"metadata":{},"sourceType":"module"}