{"ast":null,"code":"import { Transform } from 'vega-dataflow';\nimport { inherits, array, isFunction, accessorFields, hasOwnProperty, error } from 'vega-util';\nimport { forceSimulation, forceCenter, forceCollide, forceManyBody, forceLink, forceX, forceY } from 'd3-force';\nconst ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\nconst Forces = 'forces',\n      ForceParams = ['alpha', 'alphaMin', 'alphaTarget', 'velocityDecay', 'forces'],\n      ForceConfig = ['static', 'iterations'],\n      ForceOutput = ['x', 'y', 'vx', 'vy'];\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\n\nfunction Force(params) {\n  Transform.call(this, null, params);\n}\n\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'static',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'restart',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'iterations',\n    'type': 'number',\n    'default': 300\n  }, {\n    'name': 'alpha',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'alphaMin',\n    'type': 'number',\n    'default': 0.001\n  }, {\n    'name': 'alphaTarget',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'velocityDecay',\n    'type': 'number',\n    'default': 0.4\n  }, {\n    'name': 'forces',\n    'type': 'param',\n    'array': true,\n    'params': [{\n      'key': {\n        'force': 'center'\n      },\n      'params': [{\n        'name': 'x',\n        'type': 'number',\n        'default': 0\n      }, {\n        'name': 'y',\n        'type': 'number',\n        'default': 0\n      }]\n    }, {\n      'key': {\n        'force': 'collide'\n      },\n      'params': [{\n        'name': 'radius',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.7\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'nbody'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': -30\n      }, {\n        'name': 'theta',\n        'type': 'number',\n        'default': 0.9\n      }, {\n        'name': 'distanceMin',\n        'type': 'number',\n        'default': 1\n      }, {\n        'name': 'distanceMax',\n        'type': 'number'\n      }]\n    }, {\n      'key': {\n        'force': 'link'\n      },\n      'params': [{\n        'name': 'links',\n        'type': 'data'\n      }, {\n        'name': 'id',\n        'type': 'field'\n      }, {\n        'name': 'distance',\n        'type': 'number',\n        'default': 30,\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'x'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'x',\n        'type': 'field'\n      }]\n    }, {\n      'key': {\n        'force': 'y'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'y',\n        'type': 'field'\n      }]\n    }]\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'modify': false,\n    'default': ForceOutput\n  }]\n};\ninherits(Force, Transform, {\n  transform(_, pulse) {\n    var sim = this.value,\n        change = pulse.changed(pulse.ADD_REM),\n        params = _.modified(ForceParams),\n        iters = _.iterations || 300; // configure simulation\n\n\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    } // run simulation\n\n\n    if (params || change || _.modified(ForceConfig) || pulse.changed() && _.restart) {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1)).alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) sim.tick();\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n\n  finish(_, pulse) {\n    const dataflow = pulse.dataflow; // inspect dependencies, touch link source data\n\n    for (let args = this._argops, j = 0, m = args.length, arg; j < m; ++j) {\n      arg = args[j];\n\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n\n      for (var ops = arg.op._argops, i = 0, n = ops.length, op; i < n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    } // reflow all nodes\n\n\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n\n});\n\nfunction rerun(df, op) {\n  return () => df.touch(op).run();\n}\n\nfunction simulation(nodes, _) {\n  const sim = forceSimulation(nodes),\n        stop = sim.stop,\n        restart = sim.restart;\n  let stopped = false;\n\n  sim.stopped = () => stopped;\n\n  sim.restart = () => (stopped = false, restart());\n\n  sim.stop = () => (stopped = true, stop());\n\n  return setup(sim, _, true).on('end', () => stopped = true);\n}\n\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces),\n      i,\n      n,\n      p,\n      name;\n\n  for (i = 0, n = ForceParams.length; i < n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n\n  for (i = 0, n = f.length; i < n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i]) : pulse && modified(f[i], pulse) ? sim.force(name) : null;\n    if (p) sim.force(name, p);\n  }\n\n  for (n = sim.numForces || 0; i < n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\n\nfunction modified(f, pulse) {\n  var k, v;\n\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v))) return 1;\n  }\n\n  return 0;\n}\n\nfunction getForce(_) {\n  var f, p;\n\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n\n  f = ForceMap[_.force]();\n\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n\n  return f;\n}\n\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? d => v(d, _) : v);\n}\n\nexport { Force as force };","map":{"version":3,"names":["Transform","inherits","array","isFunction","accessorFields","hasOwnProperty","error","forceSimulation","forceCenter","forceCollide","forceManyBody","forceLink","forceX","forceY","ForceMap","center","collide","nbody","link","x","y","Forces","ForceParams","ForceConfig","ForceOutput","Force","params","call","Definition","transform","_","pulse","sim","value","change","changed","ADD_REM","modified","iters","iterations","simulation","source","on","rerun","dataflow","static","tick","modifies","nodes","MOD","setup","restart","alpha","Math","max","alphaDecay","pow","alphaMin","stop","stopped","StopPropagation","finish","args","_argops","j","m","length","arg","name","op","_argval","force","ops","i","n","changeset","reflow","df","touch","run","init","f","forces","p","getForce","numForces","k","v","setForceParam","d"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-force/build/vega-force.module.js"],"sourcesContent":["import { Transform } from 'vega-dataflow';\nimport { inherits, array, isFunction, accessorFields, hasOwnProperty, error } from 'vega-util';\nimport { forceSimulation, forceCenter, forceCollide, forceManyBody, forceLink, forceX, forceY } from 'd3-force';\n\nconst ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\nconst Forces = 'forces',\n      ForceParams = ['alpha', 'alphaMin', 'alphaTarget', 'velocityDecay', 'forces'],\n      ForceConfig = ['static', 'iterations'],\n      ForceOutput = ['x', 'y', 'vx', 'vy'];\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\n\nfunction Force(params) {\n  Transform.call(this, null, params);\n}\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'static',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'restart',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'iterations',\n    'type': 'number',\n    'default': 300\n  }, {\n    'name': 'alpha',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'alphaMin',\n    'type': 'number',\n    'default': 0.001\n  }, {\n    'name': 'alphaTarget',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'velocityDecay',\n    'type': 'number',\n    'default': 0.4\n  }, {\n    'name': 'forces',\n    'type': 'param',\n    'array': true,\n    'params': [{\n      'key': {\n        'force': 'center'\n      },\n      'params': [{\n        'name': 'x',\n        'type': 'number',\n        'default': 0\n      }, {\n        'name': 'y',\n        'type': 'number',\n        'default': 0\n      }]\n    }, {\n      'key': {\n        'force': 'collide'\n      },\n      'params': [{\n        'name': 'radius',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.7\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'nbody'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': -30\n      }, {\n        'name': 'theta',\n        'type': 'number',\n        'default': 0.9\n      }, {\n        'name': 'distanceMin',\n        'type': 'number',\n        'default': 1\n      }, {\n        'name': 'distanceMax',\n        'type': 'number'\n      }]\n    }, {\n      'key': {\n        'force': 'link'\n      },\n      'params': [{\n        'name': 'links',\n        'type': 'data'\n      }, {\n        'name': 'id',\n        'type': 'field'\n      }, {\n        'name': 'distance',\n        'type': 'number',\n        'default': 30,\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'x'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'x',\n        'type': 'field'\n      }]\n    }, {\n      'key': {\n        'force': 'y'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'y',\n        'type': 'field'\n      }]\n    }]\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'modify': false,\n    'default': ForceOutput\n  }]\n};\ninherits(Force, Transform, {\n  transform(_, pulse) {\n    var sim = this.value,\n        change = pulse.changed(pulse.ADD_REM),\n        params = _.modified(ForceParams),\n        iters = _.iterations || 300; // configure simulation\n\n\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    } // run simulation\n\n\n    if (params || change || _.modified(ForceConfig) || pulse.changed() && _.restart) {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1)).alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) sim.tick();\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n\n  finish(_, pulse) {\n    const dataflow = pulse.dataflow; // inspect dependencies, touch link source data\n\n    for (let args = this._argops, j = 0, m = args.length, arg; j < m; ++j) {\n      arg = args[j];\n\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n\n      for (var ops = arg.op._argops, i = 0, n = ops.length, op; i < n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    } // reflow all nodes\n\n\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n\n});\n\nfunction rerun(df, op) {\n  return () => df.touch(op).run();\n}\n\nfunction simulation(nodes, _) {\n  const sim = forceSimulation(nodes),\n        stop = sim.stop,\n        restart = sim.restart;\n  let stopped = false;\n\n  sim.stopped = () => stopped;\n\n  sim.restart = () => (stopped = false, restart());\n\n  sim.stop = () => (stopped = true, stop());\n\n  return setup(sim, _, true).on('end', () => stopped = true);\n}\n\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces),\n      i,\n      n,\n      p,\n      name;\n\n  for (i = 0, n = ForceParams.length; i < n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n\n  for (i = 0, n = f.length; i < n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i]) : pulse && modified(f[i], pulse) ? sim.force(name) : null;\n    if (p) sim.force(name, p);\n  }\n\n  for (n = sim.numForces || 0; i < n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\n\nfunction modified(f, pulse) {\n  var k, v;\n\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v))) return 1;\n  }\n\n  return 0;\n}\n\nfunction getForce(_) {\n  var f, p;\n\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n\n  f = ForceMap[_.force]();\n\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n\n  return f;\n}\n\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? d => v(d, _) : v);\n}\n\nexport { Force as force };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}