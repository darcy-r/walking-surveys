{"ast":null,"code":"import { hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\nexport class SequenceNode extends DataFlowNode {\n  constructor(parent, params) {\n    super(parent);\n    this.params = params;\n  }\n\n  clone() {\n    return new SequenceNode(null, this.params);\n  }\n\n  dependentFields() {\n    return new Set();\n  }\n\n  producedFields() {\n    var _a;\n\n    return new Set([(_a = this.params.as) !== null && _a !== void 0 ? _a : 'data']);\n  }\n\n  hash() {\n    return `Hash ${hash(this.params)}`;\n  }\n\n  assemble() {\n    return Object.assign({\n      type: 'sequence'\n    }, this.params);\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAAQA,IAAR,QAAmB,YAAnB;AAEA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,OAAM,MAAOC,YAAP,SAA4BD,YAA5B,CAAwC;EAK5CE,YAAYC,MAAZ,EAA0CC,MAA1C,EAAgE;IAC9D,MAAMD,MAAN;IADwC;EAEzC;;EANME,KAAK;IACV,OAAO,IAAIJ,YAAJ,CAAiB,IAAjB,EAAuB,KAAKG,MAA5B,CAAP;EACD;;EAMME,eAAe;IACpB,OAAO,IAAIC,GAAJ,EAAP;EACD;;EAEMC,cAAc;;;IACnB,OAAO,IAAID,GAAJ,CAAQ,CAAC,WAAKH,MAAL,CAAYK,EAAZ,MAAc,IAAd,IAAcC,aAAd,GAAcA,EAAd,GAAkB,MAAnB,CAAR,CAAP;EACD;;EAEMX,IAAI;IACT,OAAO,QAAQA,IAAI,CAAC,KAAKK,MAAN,CAAa,EAAhC;EACD;;EAEMO,QAAQ;IACb;MACEC,IAAI,EAAE;IADR,GAEK,KAAKR,MAFV;EAID;;AA1B2C","names":["hash","DataFlowNode","SequenceNode","constructor","parent","params","clone","dependentFields","Set","producedFields","as","_a","assemble","type"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/data/sequence.ts"],"sourcesContent":["import {SequenceParams} from '../../data';\nimport {hash} from '../../util';\nimport {SequenceTransform as VgSequenceTransform} from 'vega';\nimport {DataFlowNode} from './dataflow';\n\nexport class SequenceNode extends DataFlowNode {\n  public clone() {\n    return new SequenceNode(null, this.params);\n  }\n\n  constructor(parent: DataFlowNode, private params: SequenceParams) {\n    super(parent);\n  }\n\n  public dependentFields() {\n    return new Set<string>();\n  }\n\n  public producedFields() {\n    return new Set([this.params.as ?? 'data']);\n  }\n\n  public hash() {\n    return `Hash ${hash(this.params)}`;\n  }\n\n  public assemble(): VgSequenceTransform {\n    return {\n      type: 'sequence',\n      ...this.params\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}