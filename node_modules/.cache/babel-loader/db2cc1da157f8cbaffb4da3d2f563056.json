{"ast":null,"code":"import { getVgPositionChannel } from '../../../channel';\nimport * as log from '../../../log';\nimport { isSignalRef } from '../../../vega.schema';\nimport { getMarkPropOrConfig } from '../../common';\nconst ALIGNED_X_CHANNEL = {\n  left: 'x',\n  center: 'xc',\n  right: 'x2'\n};\nconst BASELINED_Y_CHANNEL = {\n  top: 'y',\n  middle: 'yc',\n  bottom: 'y2'\n};\nexport function vgAlignedPositionChannel(channel, markDef, config) {\n  let defaultAlign = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'middle';\n\n  if (channel === 'radius' || channel === 'theta') {\n    return getVgPositionChannel(channel);\n  }\n\n  const alignChannel = channel === 'x' ? 'align' : 'baseline';\n  const align = getMarkPropOrConfig(alignChannel, markDef, config);\n  let alignExcludingSignal;\n\n  if (isSignalRef(align)) {\n    log.warn(log.message.rangeMarkAlignmentCannotBeExpression(alignChannel));\n    alignExcludingSignal = undefined;\n  } else {\n    alignExcludingSignal = align;\n  }\n\n  if (channel === 'x') {\n    return ALIGNED_X_CHANNEL[alignExcludingSignal || (defaultAlign === 'top' ? 'left' : 'center')];\n  } else {\n    return BASELINED_Y_CHANNEL[alignExcludingSignal || defaultAlign];\n  }\n}","map":{"version":3,"mappings":"AACA,SAAQA,oBAAR,QAAmC,kBAAnC;AAEA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AAEA,SAAQC,WAAR,QAA2C,sBAA3C;AACA,SAAQC,mBAAR,QAAkC,cAAlC;AAEA,MAAMC,iBAAiB,GAAmC;EACxDC,IAAI,EAAE,GADkD;EAExDC,MAAM,EAAE,IAFgD;EAGxDC,KAAK,EAAE;AAHiD,CAA1D;AAMA,MAAMC,mBAAmB,GAAG;EAC1BC,GAAG,EAAE,GADqB;EAE1BC,MAAM,EAAE,IAFkB;EAG1BC,MAAM,EAAE;AAHkB,CAA5B;AAMA,OAAM,SAAUC,wBAAV,CACJC,OADI,EAEJC,OAFI,EAGJC,MAHI,EAIqC;EAAA,IAAzCC,YAAyC,uEAAR,QAAQ;;EAEzC,IAAIH,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,OAAxC,EAAiD;IAC/C,OAAOb,oBAAoB,CAACa,OAAD,CAA3B;EACD;;EACD,MAAMI,YAAY,GAAGJ,OAAO,KAAK,GAAZ,GAAkB,OAAlB,GAA4B,UAAjD;EACA,MAAMK,KAAK,GAAGf,mBAAmB,CAACc,YAAD,EAAeH,OAAf,EAAwBC,MAAxB,CAAjC;EAEA,IAAII,oBAAJ;;EAEA,IAAIjB,WAAW,CAACgB,KAAD,CAAf,EAAwB;IACtBjB,GAAG,CAACmB,IAAJ,CAASnB,GAAG,CAACoB,OAAJ,CAAYC,oCAAZ,CAAiDL,YAAjD,CAAT;IACAE,oBAAoB,GAAGI,SAAvB;EACD,CAHD,MAGO;IACLJ,oBAAoB,GAAGD,KAAvB;EACD;;EAED,IAAIL,OAAO,KAAK,GAAhB,EAAqB;IACnB,OAAOT,iBAAiB,CAACe,oBAAoB,KAAKH,YAAY,KAAK,KAAjB,GAAyB,MAAzB,GAAkC,QAAvC,CAArB,CAAxB;EACD,CAFD,MAEO;IACL,OAAOR,mBAAmB,CAACW,oBAAoB,IAAIH,YAAzB,CAA1B;EACD;AACF","names":["getVgPositionChannel","log","isSignalRef","getMarkPropOrConfig","ALIGNED_X_CHANNEL","left","center","right","BASELINED_Y_CHANNEL","top","middle","bottom","vgAlignedPositionChannel","channel","markDef","config","defaultAlign","alignChannel","align","alignExcludingSignal","warn","message","rangeMarkAlignmentCannotBeExpression","undefined"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/mark/encode/position-align.ts"],"sourcesContent":["import {Align, SignalRef, TextBaseline} from 'vega';\nimport {getVgPositionChannel} from '../../../channel';\nimport {Config} from '../../../config';\nimport * as log from '../../../log';\nimport {Mark, MarkDef} from '../../../mark';\nimport {isSignalRef, VgEncodeChannel} from '../../../vega.schema';\nimport {getMarkPropOrConfig} from '../../common';\n\nconst ALIGNED_X_CHANNEL: Record<Align, VgEncodeChannel> = {\n  left: 'x',\n  center: 'xc',\n  right: 'x2'\n};\n\nconst BASELINED_Y_CHANNEL = {\n  top: 'y',\n  middle: 'yc',\n  bottom: 'y2'\n};\n\nexport function vgAlignedPositionChannel(\n  channel: 'x' | 'y' | 'radius' | 'theta',\n  markDef: MarkDef<Mark, SignalRef>,\n  config: Config<SignalRef>,\n  defaultAlign: 'top' | 'middle' = 'middle'\n) {\n  if (channel === 'radius' || channel === 'theta') {\n    return getVgPositionChannel(channel);\n  }\n  const alignChannel = channel === 'x' ? 'align' : 'baseline';\n  const align = getMarkPropOrConfig(alignChannel, markDef, config);\n\n  let alignExcludingSignal: Align | TextBaseline;\n\n  if (isSignalRef(align)) {\n    log.warn(log.message.rangeMarkAlignmentCannotBeExpression(alignChannel));\n    alignExcludingSignal = undefined;\n  } else {\n    alignExcludingSignal = align;\n  }\n\n  if (channel === 'x') {\n    return ALIGNED_X_CHANNEL[alignExcludingSignal || (defaultAlign === 'top' ? 'left' : 'center')];\n  } else {\n    return BASELINED_Y_CHANNEL[alignExcludingSignal || defaultAlign];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}