{"ast":null,"code":"import { getViewConfigContinuousSize } from '../../config';\nimport { hasDiscreteDomain } from '../../scale';\nimport { getFirstDefined } from '../../util';\nimport { isSignalRef, isVgRangeStep } from '../../vega.schema';\nimport { signalOrStringValue } from '../common';\nimport { isFacetModel } from '../model';\nexport function assembleLayoutSignals(model) {\n  return [...sizeSignals(model, 'width'), ...sizeSignals(model, 'height'), ...sizeSignals(model, 'childWidth'), ...sizeSignals(model, 'childHeight')];\n}\nexport function sizeSignals(model, sizeType) {\n  const channel = sizeType === 'width' ? 'x' : 'y';\n  const size = model.component.layoutSize.get(sizeType);\n\n  if (!size || size === 'merged') {\n    return [];\n  } // Read size signal name from name map, just in case it is the top-level size signal that got renamed.\n\n\n  const name = model.getSizeSignalRef(sizeType).signal;\n\n  if (size === 'step') {\n    const scaleComponent = model.getScaleComponent(channel);\n\n    if (scaleComponent) {\n      const type = scaleComponent.get('type');\n      const range = scaleComponent.get('range');\n\n      if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n        const scaleName = model.scaleName(channel);\n\n        if (isFacetModel(model.parent)) {\n          // If parent is facet and this is an independent scale, return only signal signal\n          // as the width/height will be calculated using the cardinality from\n          // facet's aggregate rather than reading from scale domain\n          const parentResolve = model.parent.component.resolve;\n\n          if (parentResolve.scale[channel] === 'independent') {\n            return [stepSignal(scaleName, range)];\n          }\n        }\n\n        return [stepSignal(scaleName, range), {\n          name,\n          update: sizeExpr(scaleName, scaleComponent, `domain('${scaleName}').length`)\n        }];\n      }\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n\n\n    throw new Error('layout size is step although width/height is not step.');\n  } else if (size == 'container') {\n    const isWidth = name.endsWith('width');\n    const expr = isWidth ? 'containerSize()[0]' : 'containerSize()[1]';\n    const defaultValue = getViewConfigContinuousSize(model.config.view, isWidth ? 'width' : 'height');\n    const safeExpr = `isFinite(${expr}) ? ${expr} : ${defaultValue}`;\n    return [{\n      name,\n      init: safeExpr,\n      on: [{\n        update: safeExpr,\n        events: 'window:resize'\n      }]\n    }];\n  } else {\n    return [{\n      name,\n      value: size\n    }];\n  }\n}\n\nfunction stepSignal(scaleName, range) {\n  const name = `${scaleName}_step`;\n\n  if (isSignalRef(range.step)) {\n    return {\n      name,\n      update: range.step.signal\n    };\n  } else {\n    return {\n      name,\n      value: range.step\n    };\n  }\n}\n\nexport function sizeExpr(scaleName, scaleComponent, cardinality) {\n  const type = scaleComponent.get('type');\n  const padding = scaleComponent.get('padding');\n  const paddingOuter = getFirstDefined(scaleComponent.get('paddingOuter'), padding);\n  let paddingInner = scaleComponent.get('paddingInner');\n  paddingInner = type === 'band' ? // only band has real paddingInner\n  paddingInner !== undefined ? paddingInner : padding : // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n  // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n  1;\n  return `bandspace(${cardinality}, ${signalOrStringValue(paddingInner)}, ${signalOrStringValue(paddingOuter)}) * ${scaleName}_step`;\n}","map":{"version":3,"mappings":"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","names":["getViewConfigContinuousSize","hasDiscreteDomain","getFirstDefined","isSignalRef","isVgRangeStep","signalOrStringValue","isFacetModel","assembleLayoutSignals","model","sizeSignals","sizeType","channel","size","component","layoutSize","get","name","getSizeSignalRef","signal","scaleComponent","getScaleComponent","type","range","scaleName","parent","parentResolve","resolve","scale","stepSignal","update","sizeExpr","Error","isWidth","endsWith","expr","defaultValue","config","view","safeExpr","init","on","events","value","step","cardinality","padding","paddingOuter","paddingInner","undefined"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/vega-lite/src/compile/layoutsize/assemble.ts"],"sourcesContent":["import {InitSignal, NewSignal} from 'vega';\nimport {getViewConfigContinuousSize} from '../../config';\nimport {hasDiscreteDomain} from '../../scale';\nimport {getFirstDefined} from '../../util';\nimport {isSignalRef, isVgRangeStep, VgRangeStep} from '../../vega.schema';\nimport {signalOrStringValue} from '../common';\nimport {isFacetModel, Model} from '../model';\nimport {ScaleComponent} from '../scale/component';\nimport {LayoutSizeType} from './component';\n\nexport function assembleLayoutSignals(model: Model): NewSignal[] {\n  return [\n    ...sizeSignals(model, 'width'),\n    ...sizeSignals(model, 'height'),\n    ...sizeSignals(model, 'childWidth'),\n    ...sizeSignals(model, 'childHeight')\n  ];\n}\n\nexport function sizeSignals(model: Model, sizeType: LayoutSizeType): (NewSignal | InitSignal)[] {\n  const channel = sizeType === 'width' ? 'x' : 'y';\n  const size = model.component.layoutSize.get(sizeType);\n  if (!size || size === 'merged') {\n    return [];\n  }\n\n  // Read size signal name from name map, just in case it is the top-level size signal that got renamed.\n  const name = model.getSizeSignalRef(sizeType).signal;\n\n  if (size === 'step') {\n    const scaleComponent = model.getScaleComponent(channel);\n\n    if (scaleComponent) {\n      const type = scaleComponent.get('type');\n      const range = scaleComponent.get('range');\n\n      if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n        const scaleName = model.scaleName(channel);\n\n        if (isFacetModel(model.parent)) {\n          // If parent is facet and this is an independent scale, return only signal signal\n          // as the width/height will be calculated using the cardinality from\n          // facet's aggregate rather than reading from scale domain\n          const parentResolve = model.parent.component.resolve;\n          if (parentResolve.scale[channel] === 'independent') {\n            return [stepSignal(scaleName, range)];\n          }\n        }\n\n        return [\n          stepSignal(scaleName, range),\n          {\n            name,\n            update: sizeExpr(scaleName, scaleComponent, `domain('${scaleName}').length`)\n          }\n        ];\n      }\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n    throw new Error('layout size is step although width/height is not step.');\n  } else if (size == 'container') {\n    const isWidth = name.endsWith('width');\n    const expr = isWidth ? 'containerSize()[0]' : 'containerSize()[1]';\n    const defaultValue = getViewConfigContinuousSize(model.config.view, isWidth ? 'width' : 'height');\n    const safeExpr = `isFinite(${expr}) ? ${expr} : ${defaultValue}`;\n    return [{name, init: safeExpr, on: [{update: safeExpr, events: 'window:resize'}]}];\n  } else {\n    return [\n      {\n        name,\n        value: size\n      }\n    ];\n  }\n}\n\nfunction stepSignal(scaleName: string, range: VgRangeStep): NewSignal {\n  const name = `${scaleName}_step`;\n  if (isSignalRef(range.step)) {\n    return {name, update: range.step.signal};\n  } else {\n    return {name, value: range.step};\n  }\n}\n\nexport function sizeExpr(scaleName: string, scaleComponent: ScaleComponent, cardinality: string) {\n  const type = scaleComponent.get('type');\n  const padding = scaleComponent.get('padding');\n  const paddingOuter = getFirstDefined(scaleComponent.get('paddingOuter'), padding);\n\n  let paddingInner = scaleComponent.get('paddingInner');\n  paddingInner =\n    type === 'band'\n      ? // only band has real paddingInner\n        paddingInner !== undefined\n        ? paddingInner\n        : padding\n      : // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n        // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n        1;\n  return `bandspace(${cardinality}, ${signalOrStringValue(paddingInner)}, ${signalOrStringValue(\n    paddingOuter\n  )}) * ${scaleName}_step`;\n}\n"]},"metadata":{},"sourceType":"module"}