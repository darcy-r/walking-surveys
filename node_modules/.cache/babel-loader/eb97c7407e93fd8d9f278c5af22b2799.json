{"ast":null,"code":"import { Point } from '@visx/point';\nimport { isSVGElement, isSVGGraphicsElement, isSVGSVGElement } from './typeGuards';\nimport getXAndYFromEvent from './getXAndYFromEvent';\nexport default function localPoint(node, event) {\n  if (!node || !event) return null;\n  var coords = getXAndYFromEvent(event); // find top-most SVG\n\n  var svg = isSVGElement(node) ? node.ownerSVGElement : node;\n  var screenCTM = isSVGGraphicsElement(svg) ? svg.getScreenCTM() : null;\n\n  if (isSVGSVGElement(svg) && screenCTM) {\n    var point = svg.createSVGPoint();\n    point.x = coords.x;\n    point.y = coords.y;\n    point = point.matrixTransform(screenCTM.inverse());\n    return new Point({\n      x: point.x,\n      y: point.y\n    });\n  } // fall back to bounding box\n\n\n  var rect = node.getBoundingClientRect();\n  return new Point({\n    x: coords.x - rect.left - node.clientLeft,\n    y: coords.y - rect.top - node.clientTop\n  });\n}","map":{"version":3,"names":["Point","isSVGElement","isSVGGraphicsElement","isSVGSVGElement","getXAndYFromEvent","localPoint","node","event","coords","svg","ownerSVGElement","screenCTM","getScreenCTM","point","createSVGPoint","x","y","matrixTransform","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop"],"sources":["/Users/darcyroche/Documents/cathracha is tíreolaíocht/public life observations/plo-viz-app/node_modules/@visx/event/esm/localPointGeneric.js"],"sourcesContent":["import { Point } from '@visx/point';\nimport { isSVGElement, isSVGGraphicsElement, isSVGSVGElement } from './typeGuards';\nimport getXAndYFromEvent from './getXAndYFromEvent';\nexport default function localPoint(node, event) {\n  if (!node || !event) return null;\n  var coords = getXAndYFromEvent(event); // find top-most SVG\n\n  var svg = isSVGElement(node) ? node.ownerSVGElement : node;\n  var screenCTM = isSVGGraphicsElement(svg) ? svg.getScreenCTM() : null;\n\n  if (isSVGSVGElement(svg) && screenCTM) {\n    var point = svg.createSVGPoint();\n    point.x = coords.x;\n    point.y = coords.y;\n    point = point.matrixTransform(screenCTM.inverse());\n    return new Point({\n      x: point.x,\n      y: point.y\n    });\n  } // fall back to bounding box\n\n\n  var rect = node.getBoundingClientRect();\n  return new Point({\n    x: coords.x - rect.left - node.clientLeft,\n    y: coords.y - rect.top - node.clientTop\n  });\n}"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,YAAT,EAAuBC,oBAAvB,EAA6CC,eAA7C,QAAoE,cAApE;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;EAC9C,IAAI,CAACD,IAAD,IAAS,CAACC,KAAd,EAAqB,OAAO,IAAP;EACrB,IAAIC,MAAM,GAAGJ,iBAAiB,CAACG,KAAD,CAA9B,CAF8C,CAEP;;EAEvC,IAAIE,GAAG,GAAGR,YAAY,CAACK,IAAD,CAAZ,GAAqBA,IAAI,CAACI,eAA1B,GAA4CJ,IAAtD;EACA,IAAIK,SAAS,GAAGT,oBAAoB,CAACO,GAAD,CAApB,GAA4BA,GAAG,CAACG,YAAJ,EAA5B,GAAiD,IAAjE;;EAEA,IAAIT,eAAe,CAACM,GAAD,CAAf,IAAwBE,SAA5B,EAAuC;IACrC,IAAIE,KAAK,GAAGJ,GAAG,CAACK,cAAJ,EAAZ;IACAD,KAAK,CAACE,CAAN,GAAUP,MAAM,CAACO,CAAjB;IACAF,KAAK,CAACG,CAAN,GAAUR,MAAM,CAACQ,CAAjB;IACAH,KAAK,GAAGA,KAAK,CAACI,eAAN,CAAsBN,SAAS,CAACO,OAAV,EAAtB,CAAR;IACA,OAAO,IAAIlB,KAAJ,CAAU;MACfe,CAAC,EAAEF,KAAK,CAACE,CADM;MAEfC,CAAC,EAAEH,KAAK,CAACG;IAFM,CAAV,CAAP;EAID,CAhB6C,CAgB5C;;;EAGF,IAAIG,IAAI,GAAGb,IAAI,CAACc,qBAAL,EAAX;EACA,OAAO,IAAIpB,KAAJ,CAAU;IACfe,CAAC,EAAEP,MAAM,CAACO,CAAP,GAAWI,IAAI,CAACE,IAAhB,GAAuBf,IAAI,CAACgB,UADhB;IAEfN,CAAC,EAAER,MAAM,CAACQ,CAAP,GAAWG,IAAI,CAACI,GAAhB,GAAsBjB,IAAI,CAACkB;EAFf,CAAV,CAAP;AAID"},"metadata":{},"sourceType":"module"}